{"version":3,"sources":["../libs/pkghub.js"],"names":[],"mappings":"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","file":"libs/pkghub.js","sourcesContent":["import _ from 'underscore'\nimport Promise from 'bluebird'\nimport * as npm from './npm'\nimport * as finder from './finder'\n\nconst defaults = {\n  devider: '-',\n  includes: [\n    'name',\n    'version',\n    'logo',\n    'styles',\n    'fonts',\n    'javascripts',\n    'static',\n    'screenshot',\n    'description',\n    'main',\n    'repository',\n    'keywords',\n    'author',\n    'license',\n    'bugs',\n    'readme',\n    'path',\n    'depth',\n    'realPath',\n    'view engine'\n  ]\n}\n\nexport default class pkgHub {\n  constructor(devider = '-') {\n    this.module = {}\n    this.module.dependencies = {}\n    this.settings = _.clone(defaults)\n    this.settings.devider = devider\n  }\n\n  config(params = {}) {\n    this.settings = _.extend(defaults, params)\n    return this.settings\n  }\n\n  // 列出所有依赖模块\n  list() {\n    return npm.ls().then(packages => {\n      var modules = _.clone(packages)\n      var dependencies = modules.dependencies\n\n      if (dependencies) {\n        delete modules.dependencies\n\n        _.each(dependencies, function(module, name) {\n          dependencies[name] = wash(module)\n        })\n      }\n\n      modules = wash(modules)\n      modules.dependencies = dependencies\n\n      this.module = modules\n      this.cached = new Date()\n\n      return Promise.resolve(modules)\n    })\n  }\n\n  keywords(shortcut, name) {\n    const devider = this.settings.devider\n    const shortcuts = {\n      '__pkghub_addons': name + devider,\n      '__pkghub_plugins': name + devider + 'plugin' + devider,\n      '__pkghub_themes': name + devider + 'theme' + devider\n    }\n\n    return shortcuts[shortcut]\n  }\n\n  // 这里要加一层缓存，不要每次都去 list 一遍模块\n  // 因为 npm 有个问题同时调用两次 load list 会报错。\n  // 这样的话如果在路由里使用基本不现实\n  find(name, modules) {\n    return new Promise((resolve, reject) => {\n      // 先判断是否完全匹配模块名称\n      var pkg = modules.dependencies[name]\n      if (pkg) \n        return resolve(pkg)\n\n      // 分离模块名称和模板名称\n      // e.g: candy-theme-default/index => candy-theme-default\n      var pkgname = finder.split(name)\n      var filename = finder.split(name, 'filename')\n\n      if (pkgname && filename) {\n        var m = modules.dependencies[pkgname] || null\n        if (!m || !m.realPath) \n          return reject(new Error(`No module ${pkgname} was found`))\n\n        return resolve({\n          module: m,\n          file: finder.read(m.realPath, filename)\n        })\n      }\n\n      // 如果找不到 `/` 而且不匹配任何模块，进行搜索\n      var result = {}\n      var keyword = this.keywords(name, modules.name) || name\n\n      Object.keys(modules.dependencies).forEach(name => {\n        if (name.indexOf(keyword) > -1) \n          result[name] = modules.dependencies[name]\n      })\n\n      if (_.isEmpty(result)) \n        return reject(`No module ${name} was found`)\n\n      var availables = Object.keys(result)\n      if (availables.length === 1) \n        return resolve(result[availables[0]])\n\n      return resolve(result)\n    })\n  }\n\n  // 加载某一个模块\n  // 模块名称可以是全名，也可以是部分名\n  // 模块名称可以包涵名称和子文件，比如 candy 或 candy/template.html\n  // e.g: name = 'candy/tpl.html', file === tpl.html;\n  load(name, force) {\n    var cache = this.module\n\n    // 如果有缓存，返回缓存内容，这里还应该判断缓存时间, 比如大于多少天自动更新之类\n    // 这里可能出现一个 bug，就是前后查询条件不符合\n    // 这样 hub 可能会缓存到不正确的结果\n    if (this.cached && !force) \n      return this.find(name, cache)\n\n    // 如果没有缓存，第一次生成缓存\n    return this.list().then(modules => {\n      if (!modules.dependencies) \n        return Promise.reject(new Error(`No module ${name} was found`))\n\n      return this.find(name, modules)\n    })\n  }\n\n  // 返回一个模块的相关模块，包括插件和主题\n  // e.g: candy-editor 是 candy 的插件，此例中，插件包涵 `candy-` 字符串\n  addons() {\n    return this.load('__pkghub_addons')\n  }\n\n  // 返回一个模块的插件列表\n  // 某个包的插件是以 devider 分割的模块名字\n  // e.g: candy-editor 是 candy 的插件，此例中，插件包涵 `candy-plugin` 字符串\n  plugins() {\n    return this.load('__pkghub_plugins')\n  }\n\n  // 返回一个模块的主题列表\n  // e.g:  candy-theme-balbala 会被返回\n  themes() {\n    return this.load('__pkghub_themes')\n  }\n\n  // 安装一个包，并返回所有依赖\n  install(modules, dir) {\n    if (_.isString(modules)) \n      modules = [ modules ]\n\n    return npm.install(modules, dir).then(logs => {\n      return this.list()\n    })\n  }\n}\n\n// 清理 NPM 返回的包信息中不需要的部分\nfunction wash(obj) {\n  var washed = {}\n\n  defaults.includes.forEach(key => {\n    if (obj[key]) \n      washed[key] = obj[key]\n  })\n\n  return washed\n}\n"]}