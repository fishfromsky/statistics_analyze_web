{"version":3,"sources":["../libs/render.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;qBAcwB,QAAQ;;sBAdb,QAAQ;;;;uBACP,UAAU;;;;uBACV,WAAW;;;;AAYhB,SAAS,QAAQ,CAAC,QAAQ,EAAE,IAAI,EAAE;AAC/C,MAAM,GAAG,GAAG,yBAAU,CAAA;;AAEtB,SAAO,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CACtB,IAAI,CAAC,gBAAsB;QAAnB,MAAM,QAAN,MAAM;QAAE,IAAI,QAAJ,IAAI;;AACnB,QAAI,CAAC,MAAM,EACT,OAAO,qBAAQ,MAAM,CAAC,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC,CAAA;AACvE,QAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EACxB,OAAO,qBAAQ,MAAM,CAAC,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC,CAAA;AACpF,QAAI,CAAC,IAAI,EACP,OAAO,qBAAQ,MAAM,CAAC,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAAA;;;AAGjE,QAAM,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;;;AAGvD,QAAI,CAAC,KAAK,GAAG,MAAM,CAAA;;AAEnB,QAAI,UAAO,GAAG,KAAK,CAAC,MAAM,UAAO,CAAC,GAChC,MAAM,UAAO,GACb,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC;;AAEpB,WAAO,qBAAQ,IAAI,EAAE,IAAI,EAAE;AACzB,YAAM,EAAE,MAAM,CAAC,aAAa,CAAC;KAC9B,CAAC,CAAA;GACH,CAAC,CAAA;CACL;;AAED,SAAS,KAAK,CAAC,GAAG,EAAE;AAClB,SAAO,GAAG,KAAK,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA,AAAC,CAAA;CACxE","file":"libs/render.js","sourcesContent":["import pkghub from 'pkghub'\nimport Promise from 'bluebird'\nimport compile from './compile'\n\n/**\n*\n* A wrapper function for rendering html string by given template and data,\n* Support mutilple view engines.\n*\n* @param {String} [template] [template's short name]\n* @example\n*   exports.render('mails-flat/message', {...});\n*\n**/\nexport default function renderer(template, data) {\n  const hub = new pkghub\n\n  return hub.load(template)\n    .then(({ module, file }) => {\n      if (!module) \n        return Promise.reject(new Error('Target theme module was not found'))\n      if (!module['view engine']) \n        return Promise.reject(new Error('Template engine in `package.json` was required'))\n      if (!file) \n        return Promise.reject(new Error('Template file was not found'))\n\n      // Select the first file when template file does not exist.\n      const dest = file.exist ? file.dir : file.availables[0]\n\n      // Inject `THEME` locals\n      data.THEME = module\n      // Replace #{static} in template with real public path.\n      data.static = isURI(module.static) ? \n        module.static : \n        '/' + module.name;\n\n      return compile(dest, data, {\n        engine: module['view engine']\n      })\n    })\n}\n\nfunction isURI(dir) {\n  return dir && (dir.indexOf('http') === 0 || dir.indexOf('https') === 0)\n}\n"]}