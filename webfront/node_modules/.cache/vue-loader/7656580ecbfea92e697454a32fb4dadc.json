{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\repository\\p_median\\test\\test.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\repository\\p_median\\test\\test.vue","mtime":1609073358494},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport echarts from \"echarts\";\r\nimport shanghai from \"./mapdata/shanghai.json\";\r\necharts.registerMap(\"shanghai\", shanghai);\r\nimport { fetchall_list } from \"@/api/app01/utputallocation\";\r\nimport da from 'element-ui/src/locale/lang/da';\r\nexport default {\r\n  data() {\r\n    return {\r\n      map_loading: false,\r\n      project_id: \"p001\",\r\n      chinaGeoCoordMap: {},\r\n      chinaDatas: [],\r\n      series: [],\r\n      centrl_geo: [121.477665, 31.226048],\r\n      zoom: 1.2,\r\n      selectP: \"\",\r\n      selectRRC: \"\",\r\n      chart: null,\r\n      max_deal: null,\r\n      min_deal: null\r\n    };\r\n  },\r\n  computed: {\r\n    option: function () {\r\n      return {\r\n        tooltip: {\r\n          trigger: \"item\",\r\n          backgroundColor: \" rgba(0, 161, 255, 0.4)\",\r\n          borderColor: \"#00faff\",\r\n          showDelay: 0,\r\n          hideDelay: 0,\r\n          enterable: true,\r\n          transitionDuration: 0,\r\n          extraCssText: \"z-index:100\",\r\n          formatter: function (params, ticket, callback) {\r\n            //根据业务自己拓展要显示的内容\r\n            var res = \"\";\r\n            if (params.componentSubType === \"effectScatter\") {\r\n              var name = params.data.name;\r\n              var value = params.data.value[2];\r\n              res =\r\n                \"<span style='color:#fff;'>\" +\r\n                name +\r\n                \"</span><br/>数据：\" +\r\n                value;\r\n            } else {\r\n              var value = params.data.value;\r\n              res = \"<span style='color:#fff;'>p值\" + value + \"</span>\";\r\n            }\r\n            return res;\r\n          },\r\n        },\r\n        // backgroundColor: \"#013954\",\r\n        geo: {\r\n          map: \"shanghai\",\r\n          zoom: this.zoom,\r\n          center: this.centrl_geo,\r\n          label: {\r\n            emphasis: {\r\n              show: false,\r\n            },\r\n          },\r\n          roam: true, //是否允许缩放\r\n          itemStyle: {\r\n            normal: {\r\n               color: '#062031',\r\n                borderWidth: 1.1,\r\n                borderColor: '#43D0D6'\r\n            },\r\n            emphasis: {\r\n                areaColor: '#43D0D6'\r\n            },\r\n          },\r\n        },\r\n        series: this.series,\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    controlSeries: function (centrl, centrl_geo) {\r\n      let that = this;\r\n      [[centrl.name, that.chinaDatas]].forEach(function (item, i) {\r\n        that.series.push(\r\n          {\r\n            type: \"lines\",\r\n            zlevel: 2,\r\n            effect: {\r\n              show: true,\r\n              period: 2, //箭头指向速度，值越小速度越快\r\n              trailLength: 0.01, //特效尾迹长度[0,1]值越大，尾迹越长重\r\n              symbol: \"arrow\", //箭头图标\r\n              symbolSize: 4, //图标大小\r\n            },\r\n            lineStyle: {\r\n              normal: {\r\n                width: 0.5, //尾迹线条宽度\r\n                opacity: 1, //尾迹线条透明度\r\n                curveness: 0.2, //尾迹线条曲直度\r\n                color:'#33ffff',  // 飞线颜色\r\n              },\r\n            },\r\n            data: that.convertData(item[1], centrl_geo),\r\n          },\r\n          {\r\n            type: \"effectScatter\",\r\n            coordinateSystem: \"geo\",\r\n            zlevel: 2,\r\n            rippleEffect: {\r\n              //涟漪特效\r\n              period: 4, //动画时间，值越小速度越快\r\n              brushType: \"stroke\", //波纹绘制方式 stroke, fill\r\n              scale: 4, //波纹圆环最大限制，值越大波纹越大\r\n            },\r\n            label: {\r\n              normal: {\r\n                show: false,\r\n                position: \"right\", //显示位置\r\n                offset: [5, 0], //偏移设置\r\n                formatter: function (params) {\r\n                  //圆环显示文字\r\n                  return params.data.name;\r\n                },\r\n                fontSize: 13,\r\n              },\r\n              emphasis: {\r\n                show: true,\r\n              },\r\n            },\r\n            symbol: \"circle\",\r\n            symbolSize: function (val) {\r\n              return 1; //圆环大小\r\n            },\r\n            itemStyle: {\r\n              normal: {\r\n                show: false,\r\n                color: \"#ffff00\",\r\n              },\r\n            },\r\n            data: item[1].map(function (dataItem) {\r\n              return {\r\n                //在这里定义你所要展示的数据\r\n                name: dataItem[0].name,\r\n                value: that.chinaGeoCoordMap[dataItem[0].name].concat([\r\n                  dataItem[0].value,\r\n                ]),\r\n              };\r\n            }),\r\n          },\r\n          {\r\n            type: \"effectScatter\",\r\n            coordinateSystem: \"geo\",\r\n            zlevel: 3,\r\n            symbolSize: function (val) {\r\n                return 5+(val[2]*10)/that.max_deal;\r\n            },\r\n            rippleEffect: {\r\n                brushType: 'stroke'\r\n            },\r\n            hoverAnimation: true,\r\n            rippleEffect: {\r\n              //涟漪特效\r\n              period: 4, \r\n              brushType: \"stroke\",\r\n              scale: 4, \r\n            },\r\n            label: {\r\n                formatter: '{b}',\r\n                position: 'right',\r\n                show: true\r\n            },\r\n            itemStyle: {\r\n                color: '#FFB90F',\r\n                shadowBlur: 10,\r\n                shadowColor: '#333'\r\n            },\r\n            data: [\r\n              {\r\n                name: item[0],\r\n                value: that.chinaGeoCoordMap[item[0]].concat([centrl.value]),\r\n              },\r\n            ],\r\n          }\r\n        );\r\n      });\r\n    },\r\n    isInArray: function (arr, value) {\r\n      for (var i = 0; i < arr.length; i++) {\r\n        if (value === arr[i]) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n    selectConfirm: function () {\r\n      this.map_loading = true;\r\n      this.chinaGeoCoordMap = {};\r\n      this.chinaDatas = [];\r\n      this.series = [];\r\n      let that = this;\r\n      let data = {};\r\n      data[\"project_id\"] = this.project_id;\r\n      data[\"p_value\"] = this.selectP;\r\n      fetchall_list(data).then((res) => {\r\n        if (res.code === 20000) {\r\n          let data = res.data;\r\n          let rrc_list = [];\r\n          let rrc_detail = [];\r\n          that.max_deal = data[0].rrc_deal\r\n          that.min_deal = data[0].rrc_deal\r\n          for (let i = 0; i < data.length; i++) {\r\n            if (!that.isInArray(rrc_list, data[i].rrc)) {\r\n              rrc_list.push(data[i].rrc);\r\n              rrc_detail.push(data[i]);\r\n            }\r\n            that.chinaGeoCoordMap[data[i].ts] = [\r\n              data[i].ts_lng,\r\n              data[i].ts_lat,\r\n            ];\r\n            if (data[i].rrc_deal > that.max_deal){\r\n                that.max_deal = data[i].rrc_deal\r\n            }\r\n            if (data[i].rrc_deal < that.min_deal){\r\n                that.min_deal = data[i].rrc_deal\r\n            }\r\n          }\r\n          for (let i = 0; i < rrc_list.length; i++) {\r\n            that.chinaDatas = [];\r\n            for (let j = 0; j < data.length; j++) {\r\n              if (data[j].rrc === rrc_list[i]) {\r\n                that.chinaDatas.push([\r\n                  { name: data[j].ts, value: data[j].p_value },\r\n                ]);\r\n              }\r\n            }\r\n            that.chinaGeoCoordMap[rrc_detail[i].rrc] = [\r\n              rrc_detail[i].rrc_lng,\r\n              rrc_detail[i].rrc_lat,\r\n            ];\r\n            that.chinaDatas.push([\r\n              { name: rrc_detail[i].rrc, value: rrc_detail[i].p_value },\r\n            ]);\r\n            that.controlSeries({name: rrc_detail[i].rrc, value: rrc_detail[i].rrc_deal}, [\r\n              rrc_detail[i].rrc_lng,\r\n              rrc_detail[i].rrc_lat,\r\n            ]);\r\n          }\r\n          that.chart.setOption(that.option);\r\n          that.map_loading = false;\r\n        } else if (res.code === 50000) {\r\n          this.$message.error(res.message);\r\n        }\r\n      });\r\n    },\r\n    getList: function () {\r\n      let data = {};\r\n      data[\"project_id\"] = this.project_id;\r\n      fetchall_list(data).then((res) => {\r\n        console.log(res);\r\n      });\r\n    },\r\n    convertData: function (data, center) {\r\n      var res = [];\r\n      for (var i = 0; i < data.length; i++) {\r\n        var dataItem = data[i];\r\n        var fromCoord = this.chinaGeoCoordMap[dataItem[0].name];\r\n        var toCoord = center; //中心点地理坐标\r\n        if (fromCoord && toCoord) {\r\n          res.push([\r\n            {\r\n              coord: fromCoord,\r\n              value: dataItem[0].value,\r\n            },\r\n            {\r\n              coord: toCoord,\r\n            },\r\n          ]);\r\n        }\r\n      }\r\n      return res;\r\n    },\r\n  },\r\n  mounted() {\r\n    // this.getList()\r\n    this.chart = echarts.init(document.getElementById(\"map\"));\r\n    this.chart.setOption(this.option);\r\n  },\r\n};\r\n",null]}