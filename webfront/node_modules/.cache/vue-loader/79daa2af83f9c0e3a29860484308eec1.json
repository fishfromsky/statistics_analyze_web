{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\project\\edit\\components\\mainbody\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\project\\edit\\components\\mainbody\\index.vue","mtime":1609073358473},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { algorithmlidlist, getbyidalgorithm, getinfomodel, addselectmodel, getmodelconstruction, deleteselectmodel } from '@/api/model'\r\nimport Mallki from '@/components/TextHoverEffect/Mallki'\r\nimport da from 'element-ui/src/locale/lang/da'\r\nimport { param } from 'jquery'\r\nexport default {\r\n    components:{\r\n        Mallki\r\n    },\r\n    props:{\r\n        parentmsg: {\r\n            type: Number,\r\n            default: true\r\n        }\r\n    },\r\n    data(){\r\n        return{\r\n            selectId: null,\r\n            selectlist: [],\r\n            modeltext: '',\r\n            modeldescribe: '',\r\n            modelshow: false,\r\n            username: '',\r\n            modellist: [],\r\n            rule: [],\r\n            rule_option:[\r\n                {\r\n                    value: '1',\r\n                    label: '组合模板1',\r\n                    children: [\r\n                        {\r\n                            value: '1',\r\n                            label: '关联分析+多元回归'\r\n                        },\r\n                        {\r\n                            value: '2',\r\n                            label: '关联分析+LSTM'\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    value: '2',\r\n                    label: '组合模板2',\r\n                    children: [\r\n                        {\r\n                            value: '1',\r\n                            label: '聚类分析'\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    watch:{\r\n        selectId(val){\r\n            let that = this\r\n            let data = {}\r\n            data['id'] = val\r\n            getbyidalgorithm(data).then(res=>{\r\n                if (res.code === 20000){\r\n                    that.username = that.getCookie('environment_name')\r\n                    that.modeltext = res.data.name\r\n                    that.modeldescribe = res.data.describe\r\n                    that.modelshow = true\r\n                }\r\n            })\r\n            this.getmodelconstruction()\r\n        },\r\n        parentmsg(val){\r\n            let that = this\r\n            let data = {}\r\n            data['model_id'] = val\r\n            data['name'] = this.getCookie('environment_name')\r\n            data['algorithm_id'] = this.selectId\r\n            if (this.selectId === null){\r\n                this.$message.error('请选择编辑算法的ID')\r\n            }\r\n            else{\r\n                if (this.rule.length === 0){\r\n                    this.$message.error('请选择组合方式')\r\n                }\r\n                else{\r\n                    addselectmodel(data).then(res=>{\r\n                        if (res.code === 20000){\r\n                            this.$message({\r\n                                type: 'success',\r\n                                message: '添加成功'\r\n                            })\r\n                            that.getmodelconstruction()\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods:{\r\n        ruleselect:function(value){\r\n            this.value = value\r\n        },\r\n        startExperiment:function(){\r\n            let template_list = []\r\n            for (let i=0; i<this.modellist.length; i++){\r\n                template_list.push(this.modellist[i].sort_Id)\r\n            }\r\n            if (this.rule[0]===\"1\" && this.rule[1]===\"1\"){\r\n                if (template_list[0]===3 && template_list[1]===1){\r\n                    this.$router.push({\r\n                        path: '/project/test',\r\n                        query: {\r\n                            username: this.getCookie('environment_name'),\r\n                            algorithm_Id: this.selectId,\r\n                            rule: this.rule\r\n                        }\r\n                    })\r\n                }\r\n                else{\r\n                    this.$message.error('不符合模板规则')\r\n                }\r\n            }\r\n            else if (this.rule[0]===\"1\" && this.rule[1]===\"2\"){\r\n                if (template_list[0]===3 && template_list[1]===0){\r\n                    this.$router.push({\r\n                        path: '/project/test',\r\n                        query: {\r\n                            username: this.getCookie('environment_name'),\r\n                            algorithm_Id: this.selectId,\r\n                            rule: this.rule\r\n                        }\r\n                    })\r\n                }\r\n                else{\r\n                    this.$message.error('不符合模板规则')\r\n                }\r\n            }\r\n            else if (this.rule[0] === '2' && this.rule[1] === '1'){\r\n                if (template_list[0]===2){\r\n                    this.$router.push({\r\n                        path: '/project/test',\r\n                        query: {\r\n                            username: this.getCookie('environment_name'),\r\n                            algorithm_Id: this.selectId,\r\n                            rule: this.rule\r\n                        }\r\n                    })\r\n                }\r\n                else{\r\n                    this.$message.error('不符合模板规定')\r\n                }\r\n            }\r\n        },\r\n        DeleteModel:function(id){\r\n            let that = this\r\n            let data = {}\r\n            data['model_id'] = id\r\n            data['algorithm_id'] = this.selectId\r\n            data['name'] = this.getCookie('environment_name')\r\n            deleteselectmodel(data).then(res=>{\r\n                if (res.code === 20000){\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '删除成功'\r\n                    })\r\n                    that.getmodelconstruction()\r\n                }\r\n            })\r\n        },\r\n        getCookie:function(name){\r\n            var strcookie = document.cookie;\r\n            var arrcookie = strcookie.split(\"; \");\r\n            for ( var i = 0; i < arrcookie.length; i++) {\r\n                var arr = arrcookie[i].split(\"=\");\r\n                if (arr[0] == name){\r\n                    return arr[1];\r\n                }\r\n            }\r\n            return \"\";\r\n        },\r\n        getID:function(){\r\n            let that = this\r\n            let data = {}\r\n            let cookie = this.getCookie('environment_name')\r\n            data['username'] = cookie\r\n            algorithmlidlist(data).then(res=>{\r\n                if (res.code === 20000){\r\n                    let data = res.data\r\n                    let list = []\r\n                    for (let i=0; i<data.length; i++){\r\n                        list.push({value: data[i].project_id, label: data[i].project_id})\r\n                    }\r\n                    that.selectlist = list\r\n                }\r\n            })\r\n        },\r\n        getmodelconstruction:function(){\r\n            let that = this\r\n            let data = {}\r\n            data['name'] = this.getCookie('environment_name')\r\n            data['algorithm_id'] = this.selectId\r\n            getmodelconstruction(data).then(res=>{\r\n                if (res.code === 20000){\r\n                    that.modellist = res.data\r\n                }\r\n            })\r\n        }\r\n    },\r\n    mounted(){\r\n        this.getID()\r\n    },\r\n    created(){\r\n        let params = this.$route.query.id\r\n        if (params != undefined){\r\n            this.selectId = params\r\n        }\r\n    }\r\n\r\n}\r\n",null]}