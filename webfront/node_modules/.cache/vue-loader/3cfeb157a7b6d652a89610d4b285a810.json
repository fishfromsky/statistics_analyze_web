{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\factory\\garbage_collect\\components\\map.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\factory\\garbage_collect\\components\\map.vue","mtime":1609073358404},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\r\n// import data from \"./mapdata/location_data.json\"\r\nimport echarts from 'echarts'\r\nimport shanghai from './mapdata/shanghai.json'\r\nrequire('echarts/theme/westeros') // echarts\r\nimport resize from './mixins/resize'\r\n\r\nexport default {\r\n  name: 'GDP',\r\n  mixins: [resize],\r\n  props: {\r\n    className: {\r\n      type: String,\r\n      default: 'chart'\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: '100%'\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '700px'\r\n    },\r\n    autoResize: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    chartData: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      chart: null\r\n    }\r\n  },\r\n  watch: {\r\n    chartData: {\r\n      deep: true,\r\n      handler(val) {\r\n        this.setOptions(val)\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.initChart()\r\n    })\r\n  },\r\n  beforeDestroy() {\r\n    if (!this.chart) {\r\n      return\r\n    }\r\n    this.chart.dispose()\r\n    this.chart = null\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chart = echarts.init(this.$el)\r\n      this.setOptions(this.chartData)\r\n    },\r\n    setOptions(val) {\r\n      echarts.registerMap('shanghai', shanghai) // 绑定地图数据\r\n      this.chart.setOption({\r\n        title: {\r\n          text: '垃圾收集点'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          triggerOn: 'mousemove|click',\r\n          axisPointer: {\r\n            type: 'line'\r\n          },\r\n          formatter: '{b}: {c}',\r\n          textStyle: {\r\n            fontSize: 14\r\n          },\r\n          backgroundColor: 'rgba(50,50,50,0.7)',\r\n          borderColor: '#333',\r\n          borderWidth: 0\r\n        },\r\n        series: [\r\n          {\r\n            symbolSize: 5,\r\n            data: val,\r\n            type: 'scatter',\r\n            coordinateSystem: 'geo'\r\n          }\r\n        ],\r\n        geo: {\r\n          map: 'shanghai',\r\n          roam: true,\r\n          label: {}\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}