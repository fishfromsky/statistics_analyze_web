{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web_2\\webfront\\src\\views\\repository\\relation\\result\\RF\\components\\components\\resultchart.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\src\\views\\repository\\relation\\result\\RF\\components\\components\\resultchart.vue","mtime":1609073358499},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport echarts from 'echarts'\nrequire('echarts/theme/westeros') // echarts theme\nimport resize from './mixins/resize'\nexport default {\n    name: \"population\",\n    mixins:[resize],\n    props:{\n        className: {\n            type: String,\n            default: 'chart'\n        },\n        width: {\n            type: String,\n            default: '100%'\n        },\n        height: {\n            type: String,\n            default: '250px'\n        },\n        autoResize: {\n            type: Boolean,\n            default: true\n        },\n        chartData: {\n            type: Object,\n            required: true\n        }\n    },\n    data(){\n        return {\n            chart: null\n        }\n    },\n    watch: {\n        chartData: {\n            deep: true,\n            handler(val) {\n                this.setOptions(val)\n            }\n        }\n    },\n    mounted() {\n        this.$nextTick(() => {\n            this.initChart()\n        })\n    },\n    beforeDestroy() {\n        if (!this.chart) {\n            return\n        }\n        this.chart.dispose();\n        this.chart = null\n    },\n    methods: {\n        initChart(){\n            this.chart = echarts.init(this.$el, 'westeros');\n            this.setOptions(this.chartData)\n        },\n        setOptions(val){\n            var value = val.value\n            var label = val.label\n            this.chart.setOption({\n                title: {\n                    text: '随机森林重要因子衡量'\n                },\n                tooltip: {\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'cross',\n                        crossStyle: {\n                            color: '#999'\n                        }\n                    }\n                },\n                toolbox: {\n                    feature: {\n                        dataView: {show: true, readOnly: false},\n                        magicType: {show: true, type: ['line', 'bar']},\n                        restore: {show: true},\n                        saveAsImage: {show: true}\n                    }\n                },\n                xAxis: [\n                    {\n                        type: 'category',\n                        data: label,\n                        axisPointer: {\n                            type: 'shadow'\n                        },\n                        axisLabel : {   //坐标轴刻度标签的相关设置。\n                            interval:0,\n                            rotate:\"20\"\n                        },\n                    }\n                ],\n                yAxis: [\n                    {\n                        type: 'value',\n                        name: '重要指数',\n                        axisLabel: {\n                            formatter: '{value}'\n                        }\n                    },\n                ],\n                series: [\n                    {\n                        type: 'bar',\n                        itemStyle: {\n                            color: new echarts.graphic.LinearGradient(\n                                0, 0, 0, 1,\n                                [\n                                    {offset: 0, color: '#83bff6'},\n                                    {offset: 0.5, color: '#188df0'},\n                                    {offset: 1, color: '#188df0'}\n                                ]\n                            )\n                        },\n                        emphasis: {\n                            itemStyle: {\n                                color: new echarts.graphic.LinearGradient(\n                                    0, 0, 0, 1,\n                                    [\n                                        {offset: 0, color: '#2378f7'},\n                                        {offset: 0.7, color: '#2378f7'},\n                                        {offset: 1, color: '#83bff6'}\n                                    ]\n                                )\n                            }\n                        },\n                        data: value\n                    }\n                ]\n            })\n        }\n    }\n}\n",null]}