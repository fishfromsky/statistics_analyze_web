{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\plastic\\District\\components\\Population_Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\plastic\\District\\components\\Population_Map.vue","mtime":1642434206891},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport shanghai from './mapdata/shanghai.json'\nimport echarts from 'echarts'\nrequire('echarts/theme/macarons') // echarts theme\nimport resize from './mixins/resize'\nexport default {\n    name: \"Population_Map\",\n    mixins:[resize],\n    props:{\n        className: {\n            type: String,\n            default: 'chart'\n        },\n        width: {\n            type: String,\n            default: '100%'\n        },\n        height: {\n            type: String,\n            default: '800px'\n        },\n        autoResize: {\n            type: Boolean,\n            default: true\n        },\n        chartData: {\n            type: Array,\n            required: true\n        }\n    },\n    data(){\n        return {\n            chart: null\n        }\n    },\n    mounted() {\n        this.$nextTick(() => {\n            this.initChart()\n        })\n    },\n    beforeDestroy() {\n        if (!this.chart) {\n            return\n        }\n        this.chart.dispose()\n        this.chart = null\n    },\n    methods: {\n        initChart(){\n            this.chart = echarts.init(this.$el, 'macarons');\n            this.setOptions(this.chartData)\n        },\n        setOptions(data) {\n            echarts.registerMap('shanghai', shanghai)\n            this.chart.setOption({\n                title: {\n                    text: '上海市各区橡塑类垃圾产量'\n                },\n                tooltip: {\n                    trigger: 'item',\n                    formatter: '{b}<br/>{c} (万吨)'\n                },\n                toolbox: {\n                    show: true,\n                    orient: 'vertical',\n                    left: 'right',\n                    top: 'center',\n                    feature: {\n                        dataView: {readOnly: false},\n                        restore: {},\n                        saveAsImage: {}\n                    }\n                },\n                visualMap: {\n                    min: 800,\n                    max: 25000,\n                    text: ['High', 'Low'],\n                    realtime: false,\n                    calculable: true,\n                    inRange: {\n                        color: ['lightskyblue', 'yellow', 'orangered']\n                    }\n                },\n                series: [\n                    {\n                        name: '上海市各区橡塑类垃圾产量',\n                        type: 'map',\n                        mapType: 'shanghai', // 自定义扩展图表类型\n                        data: data\n                    }\n                ]\n            })\n        }\n    }\n}\n",null]}