{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\repository\\greenHouse\\Show\\Nation.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\repository\\greenHouse\\Show\\Nation.vue","mtime":1641987878489},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport XLSX from 'xlsx'\r\nimport { mapGetters } from 'vuex'\r\nimport { getcityeconomydata } from '@/api/model'\r\nimport emission from './components/emission'\r\nimport emissionOut from './components/emissionOut'\r\nimport { parse } from 'path-to-regexp'\r\nexport default {\r\n  name: \"Nation\",\r\n  components: {\r\n    emission,\r\n    emissionOut\r\n  },\r\n  data() {\r\n    return {\r\n      BasicInfo: {\r\n\r\n        emission: {\r\n          burndata: {},\r\n          biosdata: {},\r\n          burydata: {},\r\n          totaldata: {},\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getUploadFile(e) {\r\n      console.log('数据改变', e);\r\n      let fileName = e.target.files[0]\r\n      let reader = new FileReader();\r\n      reader.readAsBinaryString(fileName)\r\n      //onload在文件被读取时自动触发\r\n      reader.onload = (e) => {\r\n        let workbook = XLSX.read(e.target.result, { type: 'binary' })\r\n        console.log(workbook);\r\n        let startData = workbook.Sheets\r\n        let sheetList = workbook.SheetNames\r\n        //存放json数组格式的表格数据\r\n        sheetList.forEach(item => {\r\n          let worksheet = workbook.Sheets[item]\r\n          let json = XLSX.utils.sheet_to_json(workbook.Sheets[item])\r\n          this.resultJson = json\r\n        });\r\n        console.log(\"resultJson\", this.resultJson);\r\n        var b = {};\r\n        var bur = {};\r\n        var bio = {};\r\n        var total = {};\r\n        var offsetCO2 = {};\r\n        for (var item of this.resultJson) {\r\n          for (var key in item) {\r\n            //CO2抵消\r\n            if (key == 'e15' || key == 'e19' || key == 'e20') {\r\n              if (offsetCO2[item['a2_sjtu_year']])\r\n                offsetCO2[item['a2_sjtu_year']] += item[key]\r\n              else offsetCO2[item['a2_sjtu_year']] = item[key]\r\n            }\r\n            //CH4抵消\r\n            if (key == 'e11' || key == 'e16' || key == 'e18') {\r\n              if (bio[item['a2_sjtu_year']])\r\n                bio[item['a2_sjtu_year']] += item[key]\r\n              else bio[item['a2_sjtu_year']] = item[key]\r\n            }\r\n            //N2O\r\n            if (key == 'e13' || key == 'e17') {\r\n              if (b[item['a2_sjtu_year']])\r\n                b[item['a2_sjtu_year']] += item[key]\r\n              else b[item['a2_sjtu_year']] = item[key]\r\n            }\r\n\r\n          }\r\n        }\r\n        for (var item in bio) {\r\n          bio[item] = Number(bio[item] * 25).toFixed(3)\r\n        }\r\n        for (var item in b) {\r\n          b[item] = Number(b[item] * 298).toFixed(3)\r\n        }\r\n        this.burydata = b\r\n        this.biosdata = bio\r\n        this.burndata = bur\r\n        this.totaldata = total\r\n        console.log(\"填埋排放\", this.burydata)\r\n        console.log(\"CH4\", this.biosdata)\r\n        console.log(\"CO2\", this.burndata)\r\n        console.log(\"totaldata\", this.totaldata)\r\n        console.log(\"offsetCO2\", offsetCO2)\r\n\r\n      }\r\n    },\r\n\r\n\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'name'\r\n    ])\r\n  },\r\n  mounted() {\r\n    let that = this;\r\n    getcityeconomydata().then(res => {\r\n      if (res.code === 20000) {\r\n        let result = res.data\r\n        result.sort(function (a, b) {\r\n          return parseInt(a.year) > parseInt(b.year) ? 1 : -1\r\n        })\r\n        for (let i = 0; i < result.length; i++) {\r\n          that.BasicInfo.GDPData.total.push(parseFloat(result[i]['gdp']))\r\n          that.BasicInfo.GDPData.rate.push(result[i]['gdp_growth_rate'])\r\n          that.BasicInfo.GDPData.year.push(result[i]['year'])\r\n          that.BasicInfo.CapitaGDP.capita_gdp.push(parseFloat(result[i]['gdp_per_capita']))\r\n          that.BasicInfo.CapitaGDP.year.push(result[i]['year'])\r\n          that.BasicInfo.Rate.economy_rate.push(parseFloat(result[i]['gdp_growth_rate']))\r\n          that.BasicInfo.Rate.year.push(result[i]['year'])\r\n          that.BasicInfo.Industry.year.push(result[i]['year'])\r\n          let sum = result[i]['gdp_first_industry'] + result[i]['gdp_second_industry'] + result[i]['gdp_third_industry']\r\n          that.BasicInfo.Industry.first.push((result[i]['gdp_first_industry'] / sum).toFixed(2))\r\n          that.BasicInfo.Industry.second.push((result[i]['gdp_second_industry'] / sum).toFixed(2))\r\n          that.BasicInfo.Industry.third.push((result[i]['gdp_third_industry'] / sum).toFixed(2))\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n",null]}