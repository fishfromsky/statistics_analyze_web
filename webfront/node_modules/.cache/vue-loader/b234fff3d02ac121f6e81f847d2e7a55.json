{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web_2\\webfront\\src\\views\\tree\\components\\factorylist.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\src\\views\\tree\\components\\factorylist.vue","mtime":1609073358506},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getfactorylist, amendfactorylist, deletefactorylist, addfactorylistbyrow } from '@/api/model'\r\nimport VueAMap from 'vue-amap'\r\nimport Vue from 'vue'\r\nVue.use(VueAMap)\r\nVueAMap.initAMapApiLoader({\r\n    key: 'b84d5392efeafdc572f53e8de8dfd501',\r\n    plugin: ['AMap.Autocomplete', 'AMap.PlaceSearch', 'AMap.Scale', 'AMap.OverView', 'AMap.ToolBar', 'AMap.MapType', 'AMap.PolyEditor', 'AMap.CircleEditor', 'AMap.Geolocation', 'Geocoder']\r\n})\r\nexport default {\r\n    name: 'factorylist',\r\n    data(){\r\n        const self = this\r\n        return {\r\n            table_loading: true,\r\n            tablekey: 0,\r\n            tableData: [],\r\n            page_data: [],\r\n            formData: [],\r\n            total_size: 0,\r\n            currentPage: 1,\r\n            page_size: 10,\r\n            amend_dialog: false,\r\n            delete_dialog: false,\r\n            add_dialog: false,\r\n            form: {},\r\n            delete_form: {\r\n                id: ''\r\n            },\r\n            add_dialog: false,\r\n            add_form: {\r\n                name: '',\r\n                address: '',\r\n                logitude: '',\r\n                latitude: '',\r\n                deal: '',\r\n                type: '',\r\n                district: ''\r\n            },\r\n            labelwidth: '120px',\r\n            map_dialog: false,\r\n            zoom: 15,\r\n            center: [121.456848, 31.274044],\r\n            plugin: [{\r\n                pName: 'Geolocation',\r\n                events: {\r\n                \r\n                }\r\n            }],\r\n             searchOption: {\r\n                city: '上海',\r\n                citylimit: false\r\n            },\r\n            events: {\r\n                click(e) {\r\n                    const { lng, lat } = e.lnglat\r\n                    self.add_form.longitude = lng\r\n                    self.add_form.latitude = lat\r\n                    // 这里通过高德 SDK 完成。\r\n                    var geocoder = new AMap.Geocoder({\r\n                        radius: 1000,\r\n                        extensions: 'all'\r\n                    })\r\n                    geocoder.getAddress([lng, lat], function(status, result) {\r\n                        if (status === 'complete' && result.info === 'OK') {\r\n                            if (result && result.regeocode) {\r\n                                self.add_form.address = result.regeocode.formattedAddress\r\n                                self.add_form.name = result.regeocode.aois[0].name\r\n                                self.add_form.district = result.regeocode.addressComponent.district\r\n                                self.$nextTick()\r\n                                self.$message({\r\n                                    message: '获取位置成功',\r\n                                    type: 'success'\r\n                                })\r\n                                self.map_dialog = false\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            },\r\n            filename: 'factorylist',\r\n            autoWidth: true,\r\n            bookType: 'xlsx',\r\n        }\r\n    },\r\n    methods:{\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                if (j === 'timestamp') {\r\n                return parseTime(v[j])\r\n                } else {\r\n                return v[j]\r\n                }\r\n            }))\r\n        },\r\n        DownLoad:function(){\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const tHeader = ['name', 'address', 'longitude', 'latitude', 'deal', 'company', 'type', 'district']\r\n                const filterVal = ['name', 'address', 'longitude', 'latitude', 'deal', 'company', 'type', 'district']\r\n                const list = this.tableData\r\n                const data = this.formatJson(filterVal, list)\r\n                excel.export_json_to_excel({\r\n                header: tHeader,\r\n                data,\r\n                filename: this.filename,\r\n                autoWidth: this.autoWidth,\r\n                bookType: this.bookType\r\n                })\r\n            })\r\n        },\r\n        onSearchResult(pois) {\r\n          let latSum = 0;\r\n          let lngSum = 0;\r\n          if (pois.length > 0) {\r\n            pois.forEach(poi => {\r\n                let {lng, lat} = poi;\r\n                lngSum += lng;\r\n                latSum += lat;\r\n                });\r\n                let cent = {\r\n                    lng: lngSum / pois.length,\r\n                    lat: latSum / pois.length\r\n                };\r\n                this.center = [cent.lng, cent.lat];\r\n            }\r\n        },\r\n        showmap:function(){\r\n            this.map_dialog = true\r\n        },\r\n        addData(){\r\n            this.add_dialog = true\r\n        },\r\n        getData(){\r\n            var that = this\r\n            getfactorylist().then(res=>{\r\n                if (res.code === 20000){\r\n                    that.table_loading = false\r\n                    that.tableData = res.data\r\n                    let size = that.page_size\r\n                    let index = that.currentPage-1\r\n                    for (let i=index*size; i<(index+1)*size; i++){\r\n                        if (i==res.data.length){\r\n                            break\r\n                        }\r\n                        that.page_data.push(res.data[i])\r\n                    }\r\n                    that.total_size = res.data.length\r\n                }\r\n            })\r\n        },\r\n        handleSizeChange(val){\r\n            this.table_loading = true\r\n            this.page_size = val\r\n            this.currentPage = 1\r\n            this.page_data = []\r\n            this.getData()\r\n        },\r\n        handleCurrentChange(val){\r\n            this.currentPage = val\r\n            this.page_data = []\r\n            this.getData()\r\n        },\r\n        AmendData(val){\r\n            this.form = this.page_data[val]\r\n            this.amend_dialog = true\r\n        },\r\n        AmendDataConfirm(){\r\n            var that = this\r\n            let type = this.form['type']\r\n            if (type === '焚烧'){\r\n                this.form['typeId'] = 1\r\n            }\r\n            else if (type === '填埋'){\r\n                this.form['typeId'] = 2\r\n            }\r\n            else{\r\n                this.form['typeId'] = 0\r\n            }\r\n            amendfactorylist(this.form).then(res=>{\r\n                if (res.code === 20000){\r\n                    that.$message({\r\n                        type: 'success',\r\n                        message: '修改成功'\r\n                    })\r\n                    that.page_data = []\r\n                    that.getData()\r\n                }\r\n                that.amend_dialog = false\r\n            })\r\n        },\r\n         DeleteData(index){\r\n            this.delete_dialog = true\r\n            this.delete_form.id = this.page_data[index].id\r\n        },\r\n        DeleteDataConfirm(){\r\n            var that = this\r\n            deletefactorylist(this.delete_form).then(res=>{\r\n                if (res.code === 20000){\r\n                    that.$message({\r\n                        type: 'success',\r\n                        message: '删除成功'\r\n                    })\r\n                    that.page_data = []\r\n                    that.delete_dialog = false\r\n                    that.getData()\r\n                }\r\n            })\r\n        },\r\n        AddDataConfirm(){\r\n            let that = this\r\n            if (this.add_form.name === '' || this.add_form.address === '' || this.add_form.longitude === '' || this.add_form.latitude === ''\r\n             || this.add_form.type === '' || this.add_form.district === '' || this.add_form.company === '' || this.add_form.deal === ''){\r\n                 this.$message.error('表格信息不完整，请完善信息')\r\n            }\r\n            else{\r\n                 let type = this.add_form.type\r\n                if (type === '焚烧'){\r\n                    this.add_form.typeId = 1\r\n                }\r\n                else if (type === '填埋'){\r\n                    this.add_form.typeId = 2\r\n                }\r\n                else{\r\n                    this.add_form.typeId = 0\r\n                }\r\n                addfactorylistbyrow(this.add_form).then(res=>{\r\n                    if (res.code === 20000){\r\n                        that.$message({\r\n                            type: 'success',\r\n                            message: '添加成功'\r\n                        })\r\n                        that.page_data = []\r\n                        that.add_dialog = false\r\n                        that.getData()\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    },\r\n    mounted(){\r\n        this.getData()\r\n    }\r\n}\r\n",null]}