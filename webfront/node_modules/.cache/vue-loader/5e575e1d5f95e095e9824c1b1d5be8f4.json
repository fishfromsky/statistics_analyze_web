{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\dashboard\\admin\\components\\Student.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\dashboard\\admin\\components\\Student.vue","mtime":1609073358359},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport echarts from 'echarts'\nrequire('echarts/theme/westeros') // echarts theme\nimport resize from './mixins/resize'\nexport default {\n    name: \"ModelKind\",\n    mixins:[resize],\n    props:{\n      className: {\n        type: String,\n        default: 'chart'\n      },\n      width: {\n        type: String,\n        default: '100%'\n      },\n      height: {\n        type: String,\n        default: '300px'\n      },\n      autoResize: {\n        type: Boolean,\n        default: true\n      },\n      chartData: {\n        type: Array,\n        required: true\n      }\n    },\n    data(){\n      return {\n        chart: null\n      }\n    },\n    watch:{\n      chartData:{\n        deep: true,\n        handler(val) {\n          this.setOptions(val)\n        }\n      }\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initChart()\n      })\n    },\n    beforeDestroy() {\n      if (!this.chart) {\n        return\n      }\n      this.chart.dispose();\n      this.chart = null\n    },\n    methods:{\n        initChart() {\n            this.chart = echarts.init(this.$el, 'westeros');\n            let pieData = [];\n            let nameData = [];\n            for (let i=0; i<this.chartData.length; i++){\n              let dict = {};\n              dict['name'] = this.chartData[i].name;\n              dict['value'] = this.chartData[i].value;\n              pieData.push(dict);\n              nameData.push(this.chartData[i].name);\n            }\n            this.setOptions(pieData, nameData)\n        },\n        setOptions(pieData, nameData){\n          this.chart.setOption({\n                  tooltip: {\n                  trigger: 'item',\n                  formatter: '{a} <br/>{b} : {c} ({d}%)'\n              },\n              legend: {\n                  left: 'center',\n                  bottom: '10',\n                  data: nameData\n              },\n              series: [\n              {\n                  name: '实验学生来源',\n                  type: 'pie',\n                  roseType: 'radius',\n                  radius: [15, 95],\n                  center: ['50%', '38%'],\n                  data: pieData,\n                  animationEasing: 'cubicInOut',\n                  animationDuration: 2600\n              }\n            ]\n          })\n        }\n    }\n}\n",null]}