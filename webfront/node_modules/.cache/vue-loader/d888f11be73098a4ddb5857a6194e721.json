{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\repository\\greenHouse\\Show\\NationMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\repository\\greenHouse\\Show\\NationMap.vue","mtime":1642086688795},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport *as echarts from 'echarts';\nimport 'echarts/map/js/china.js'; // 引入中国地图数据\nimport proEmission from './components/proEmission.vue'\nimport mapdata from './map.js';\nimport prodata from './province.js';\n\n\nexport default {\n  name: 'NationMap',\n  components: {\n      proEmission,\n          },\n  data () {\n    return {\n    mapdata: {},\n    provinceData:prodata,\n    SelectPro:\"各省份\",\n    update:false,\n    bioNet:  [-0.02,-0.05,-0.04,-0.03,-0.03,-0.04,-0.05,-0.06,-0.08,-0.11],\n    buryNet:[142,148,155,155,158,169,175,178,173,161],\n    burnNet: [5,5,7,10,11,13,16,18,22,26],\n    center_chart:null,\n    geoJson: {\n        features: []\n            },\n    }\n    },\n    mounted(){\n      this.showchart_center();\n      this.showchart_right();\n      this.showchart_right_bottom();\n      this.getGeoJson(100000); // 获取全国地图\n         },\n  methods:{\ndataUpdate(name){\n    let that=this;\n    console.log(\"使用dataUpdate\"+name);\n        that.update=false;\n        for(var i=0;i<prodata.length;i++){\n             if(prodata[i].province==name){\n                that.bioNet=prodata[i].bio\n                that.burnNet=prodata[i].burn\n                that.buryNet=prodata[i].bury\n            }\n        }\n        that.SelectPro=name\n        console.log(that.SelectPro)\n        that.showchart_right();\n\n},\nshowchart_center(){\nvar attr={\n    'unitname':'总量',\n    'unit':'百万吨'\n       }\nthis.$echarts.registerMap('100000', this.geoJson); //注册\nlet chart = this.$echarts.init(this.$refs.chart);\nlet option={\n    geo: {\n            map: 'china',\n            aspectScale: 0.75, //长宽比\n            zoom: 1.1,\n            roam: false,\n            itemStyle: {\n                normal: {\n                    areaColor: {\n                        type: 'radial',\n                        x: 0.5,\n                        y: 0.5,\n                        r: 0.8,\n                        colorStops: [{\n                            offset: 0,\n                            color: '#09132c' // 0% 处的颜色\n                        }, {\n                            offset: 1,\n                            color: '#274d68' // 100% 处的颜色\n                        }],\n                        globalCoord: true // 缺省为 false\n                    },\n                    shadowColor: 'rgb(58,115,192)',\n                    shadowOffsetX: 10,\n                    shadowOffsetY: 11\n                },\n                emphasis: {\n                    areaColor: '#66CDAA',\n                    borderWidth: 0,\n                    color: 'green',\n                    label: {\n                        show: false\n                    }\n                }\n            },\n            regions: [{\n                name: '南海诸岛',\n                itemStyle: {\n                    areaColor: 'rgba(0, 10, 52, 1)',\n\n                    borderColor: 'rgba(0, 10, 52, 1)',\n                    normal: {\n                        opacity: 0,\n                        label: {\n                            show: false,\n                            color: \"#009cc9\",\n                        }\n                    }\n                },\n\n\n            }],\n        },\n    legend: {\n        textStyle:{\n          color:'white'\n        },\n    },\n    tooltip:{\n        trigger: 'item',\n         formatter: function(param) {},\n    },\n    visualMap: {\n        type: 'piecewise',\n        left: '10%',\n        top: '75%',\n        min: 0,\n        max: 10000, //根据后台最大数值确定\n        splitNumber: 5,\n        color: ['#5475f5', '#9feaa5', '#85daef','#98FB98', '#e6ac53', '#9fb5ea'] , //设置坐标点从小到大的颜色,蓝、绿、淡蓝、\n        pieces: [{\n                lte: 20,\n                label: '总排放<=20百万吨'\n            },{\n                gt:20,\n                lte: 50,\n                label: '20百万吨<总排放<=50百万吨'\n            },\n            {\n                gt:50,\n                lte: 90,\n                label: '50百万吨<总排放<=90百万吨'\n            },\n            {\n                gt: 90,\n                label: '总排放>90百万吨'\n            },\n        ],\n        textStyle: {\n            color: '#aaaaaa'\n        },\n        itemWidth: 10,\n        itemHeight: 10,\n    },\n\n    series: [{\n                type: 'map',\n                roam: false,\n                label: {\n                    normal: {\n                        show: true,\n                        textStyle: {\n                            color: '#FFFF00',\n                            fontSize:16,\n                            fontWeight:'bold'\n\n                        }\n                    },\n                },\n                tooltip:{\n                    formatter: function(param) {\n                                return param.data.name+'<br>'+attr.unitname+':'+param.data.value+attr.unit\n                            }\n                },\n                itemStyle: {\n                    normal: {\n                        borderColor: 'rgb(147, 235, 248)',\n                        borderWidth: 0.6,\n                        areaColor: {\n                            type: 'radial',\n                            x: 0.5,\n                            y: 0.5,\n                            r: 0.8,\n                            colorStops: [{\n                                offset: 0,\n                                color: '#09132c' // 0% 处的颜色\n                            }, {\n                                offset: 1,\n                                color: '#274d68' // 100% 处的颜色\n                            }],\n                            globalCoord: true // 缺省为 false\n                        },\n                    },\n                    emphasis: {\n                        areaColor: '#FFB6C1',\n                        borderWidth: 0.1\n                    }\n                },\n                zoom: 1.1,\n                map: 'china', //使用\n                 data:mapdata,\n            },\n        ]\n};\n    chart.setOption(option);\n    let that = this;\n\tchart.on('click', function(params){\n            that.SelectPro=params.name\n            console.log(\"地图\"+that.SelectPro)\n\t\t\tconsole.log(params);//此处写点击事件内容\n            that.update=true;\n            that.$options.methods.dataUpdate(params.name);\n\t\t});\n},\n\nshowchart_right(){\n     let this_ = this;\n    console.log(\"柱状图地区\"+this_.SelectPro)\n    let myChart = echarts.init(document.getElementById('proEmission'));\n    var xData = function () {\n      var data = [];\n      for (var i = 2010; i < 2020; i++) {\n        data.push(i + \"年\");\n      }\n      return data;\n    }();\n    let option = {\n\n      \"title\": {\n        \"text\": this_.SelectPro+\"温室气体排放-处理情况\",\n        x: \"4%\",\n\n        textStyle: {\n          color: '#fff',\n          fontSize: '22'\n        },\n        subtextStyle: {\n          color: '#90979c',\n          fontSize: '16',\n\n        },\n      },\n    \"toolbox\":{\n        \"feature\":{\n          \"saveAsImage\":{\n            title:\"保存为图片\",\n            show:true,\n            \"iconStyle\":{\n              color:'#7EE0D6',\n               borderWidth :3\n            },\n            backgroundColor: \"rgb(8, 15, 62)\"\n          },\n          \"magicType\": {\n            type: ['line', 'bar','stack']\n                },  //切换为折线图，切换为柱状图\n        }\n      },\n      \"tooltip\": {\n        \"trigger\": \"axis\",\n        \"axisPointer\": {\n          \"type\": \"shadow\",\n          textStyle: {\n            color: \"#fff\"\n          }\n        },\n      },\n      \"grid\": {\n        \"borderWidth\": 0,\n        \"top\": 110,\n        \"bottom\": 95,\n        textStyle: {\n          color: \"#fff\"\n        }\n      },\n      \"legend\": {\n        x: '4%',\n        top: '8%',\n        textStyle: {\n          color: '#90979c',\n        },\n        \"data\": ['焚烧净排', '生物净排', '填埋净排']\n      },\n\n\n      \"calculable\": true,\n      \"xAxis\": [{\n        \"type\": \"category\",\n        \"axisLine\": {\n          lineStyle: {\n            color: '#90979c'\n          }\n        },\n        \"splitLine\": {\n          \"show\": false\n        },\n        \"axisTick\": {\n          \"show\": false\n        },\n        \"splitArea\": {\n          \"show\": false\n        },\n        \"axisLabel\": {\n          \"interval\": 0,\n\n        },\n        \"data\": xData,\n      }],\n      \"yAxis\": [{\n        \"type\": \"value\",\n        \"splitLine\": {\n          \"show\": false\n        },\n        \"axisLine\": {\n          lineStyle: {\n            color: '#90979c'\n          }\n        },\n        \"axisTick\": {\n          \"show\": false\n        },\n        \"axisLabel\": {\n          \"interval\": 0,\n\n        },\n        \"splitArea\": {\n          \"show\": false\n        },\n\n      }],\n      \"dataZoom\": [{\n        \"show\": true,\n        \"height\": 30,\n        \"xAxisIndex\": [\n          0\n        ],\n        bottom: 30,\n        \"start\": 10,\n        \"end\": 80,\n        handleIcon: 'path://M306.1,413c0,2.2-1.8,4-4,4h-59.8c-2.2,0-4-1.8-4-4V200.8c0-2.2,1.8-4,4-4h59.8c2.2,0,4,1.8,4,4V413z',\n        handleSize: '110%',\n        handleStyle: {\n          color: \"#d3dee5\",\n\n        },\n        textStyle: {\n          color: \"#fff\"\n        },\n        borderColor: \"#90979c\"\n\n\n      }, {\n        \"type\": \"inside\",\n        \"show\": true,\n        \"height\": 15,\n        \"start\": 1,\n        \"end\": 35\n      }],\n      \"series\": [\n          {\n        \"name\": \"填埋净排\",\n        \"type\": \"bar\",\n        \"barMaxWidth\": 35,\n        \"itemStyle\": {\n          \"normal\": {\n            \"color\": \"rgba(65,105,225,1)\",\n            \"label\": {\n              \"show\": true,\n              \"textStyle\": {\n                \"color\": \"#fff\"\n              },\n              \"position\": \"inside\",\n              formatter: function (p) {\n                return p.value > 0 ? (p.value) : '';\n              }\n            }\n          }\n        },\n        \"data\": this.buryNet,\n      },\n      //净排\n        {\n        \"name\": \"生物净排\",\n        \"type\": \"bar\",\n        \"barMaxWidth\": 35,\n        \"itemStyle\": {\n          \"normal\": {\n            \"color\": \"rgba(\t60,179,113,1)\",\n            \"label\": {\n              \"show\": true,\n              \"textStyle\": {\n                \"color\": \"#fff\"\n              },\n              \"position\": \"inside\",\n              // formatter: function (p) {\n              //   return p.value > 0 ? (p.value) : '';\n              // }\n            }\n          }\n        },\n        \"data\":this.bioNet,\n      },\n\n      {\n        \"name\": \"焚烧净排\",\n        \"type\": \"bar\",\n        \"itemStyle\": {\n          \"normal\": {\n            \"color\": \"#FF9966\",\n            \"barBorderRadius\": 0,\n            \"label\": {\n              \"show\": true,\n              \"position\": \"inside\",\n              formatter: function (p) {\n                return p.value > 0 ? (p.value) : '';\n              }\n            }\n          }\n        },\n        \"data\":this.burnNet\n      },\n      ]\n    };\n    myChart.setOption(option);\n    window.addEventListener('resize', function () { myChart.resize() });\n},\nshowchart_right_bottom(){\n     let this_ = this;\n    let pieChart = echarts.init(document.getElementById('proPie'));\n    let option = {\n    title: {\n        text: '排放比例饼图',\n        x: \"4%\",\n        textStyle: {\n          color: '#fff',\n          fontSize: '22'\n        },\n    },\n\n\n    tooltip: {\n        trigger: 'item',\n        formatter: \"{b} : {c} ({d}%)\"\n    },\n\n    visualMap: {\n        show: false,\n        min: 500,\n        max: 600,\n        inRange: {\n            //colorLightness: [0, 1]\n        }\n    },\n    series: [{\n        name: '排放',\n        type: 'pie',\n        radius: '80%',\n        center: ['50%', '50%'],\n        color: [ 'rgb(131,249,103)','#FE5050','#FBFE27','#1DB7E5', , ], //'#FBFE27','rgb(11,228,96)','#FE5050'\n        data: [\n\n             {\n                value: 274,\n                name: '生物排放'\n            },\n               {\n                value: 410,\n                name: '焚烧排放'\n            },\n            {\n                value: 800,\n                name: '填埋排放'\n            },\n        ].sort(function(a, b) {\n            return a.value - b.value\n        }),\n        roseType: 'radius',\n\n        label: {\n            normal: {\n                formatter: ['{c|{c}百万吨}', '{b|{b}}'].join('\\n'),\n                rich: {\n                    c: {\n                        color: 'rgb(241,246,104)',\n                        fontSize: 20,\n                        fontWeight:'bold',\n                        lineHeight: 5\n                    },\n                    b: {\n                        color: 'rgb(98,137,169)',\n                        fontSize: 15,\n                        height: 40\n                    },\n                },\n            }\n        },\n        labelLine: {\n            normal: {\n                lineStyle: {\n                    color: 'rgb(98,137,169)',\n                },\n                smooth: 0.2,\n                length: 10,\n                length2: 20,\n\n            }\n        },\n        itemStyle: {\n            normal: {\n                shadowColor: 'rgba(0, 0, 0, 0.8)',\n                shadowBlur: 50,\n            }\n        }\n    }]\n};\n    pieChart.setOption(option);\n    window.addEventListener('resize', function () { myChart.resize() });\n},\n getGeoJson(adcode) {\n            let that = this;\n            AMapUI.loadUI(['geo/DistrictExplorer'], DistrictExplorer => {\n                var districtExplorer = new DistrictExplorer()\n                districtExplorer.loadAreaNode(adcode, function(error, areaNode) {\n                    if (error) {\n                        console.error(error);\n                        return;\n                    }\n                    let Json = areaNode.getSubFeatures()\n                    if (Json.length > 0) {\n                        that.geoJson.features = Json\n                        console.log('geoJson', Json)\n                    } else if (Json.length === 0) {\n                        that.geoJson.features = that.geoJson.features.filter(item => item.properties.adcode == adcode)\n                        if (that.geoJson.features.length === 0) return\n                    }\n                });\n            })\n\n        },\n},\n}\n",null]}