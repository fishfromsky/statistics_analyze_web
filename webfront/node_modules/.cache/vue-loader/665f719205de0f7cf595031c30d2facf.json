{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web_2\\webfront\\src\\views\\dashboard\\admin\\components\\ModelVisit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\src\\views\\dashboard\\admin\\components\\ModelVisit.vue","mtime":1609073358358},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n\r\nimport { getgarbagecountry } from '@/api/model'\r\nimport echarts from \"echarts\"\r\nimport resize from './mixins/resize'\r\nimport $ from \"jquery\"\r\nimport \"../../../../../node_modules/echarts-gl/dist/echarts-gl.js\";\r\nimport \"../../../../../node_modules/echarts/map/js/province/shanghai.js\";\r\n\r\nexport default {\r\n  name: \"echarts\",\r\n  mixins:[resize],\r\n  props:{\r\n    className: {\r\n      type: String,\r\n      default: 'chart'\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: '100%'\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '300px'\r\n    },\r\n    autoResize: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      chart: null,\r\n      datax: []\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getData()\r\n  },\r\n  beforeDestroy() {\r\n    if (!this.chart) {\r\n      return;\r\n    }\r\n    this.chart.dispose();\r\n    this.chart = null;\r\n  },\r\n  methods: {\r\n    getData:function(){\r\n      let that = this\r\n      this.datax = []\r\n      getgarbagecountry().then(res=>{\r\n        if (res.code === 20000){\r\n          let result = res.data\r\n          for (let i=0; i<result.length; i++){\r\n            that.datax.push([result[i].longitude, result[i].latitude, parseFloat(result[i].production), result[i].name, result[i].production, result[i].district])\r\n          }\r\n          that.chinaConfigure()\r\n        }\r\n      })\r\n    },\r\n    tipFormatter:function(params){\r\n        var name = params.data[3];\r\n        var value = params.data[4];\r\n        let res =\r\n          \"<div class='div-tip'><span style='color:#fff;'>\" +\r\n          name +\r\n          \"</span><br/>数据：\" +\r\n          value+\"</div>\";\r\n        return res\r\n    },\r\n    chinaConfigure() {\r\n      let that = this\r\n      let myChart = echarts.init(this.$refs.myEchart); //这里是为了获得容器所在位置\r\n      window.onresize = myChart.resize;\r\n      myChart.setOption({\r\n        // 进行相关配置\r\n        backgroundColor: \"rgba(0, 0, 0, 0)\",\r\n        tooltip: {\r\n          trigger: \"item\",\r\n          backgroundColor: \"rgba(0, 161, 255, 0.5)\",\r\n          borderColor: \"#00faff\",\r\n          showDelay: 0,\r\n          hideDelay: 0,\r\n          enterable: true,\r\n          transitionDuration: 0,\r\n          extraCssText: \"z-index:100\",\r\n          formatter: function (params, ticket, callback) {\r\n            //根据业务自己拓展要显示的内容\r\n            return that.tipFormatter(params)\r\n          },\r\n        },\r\n        geo3D: {\r\n          map: \"上海\",\r\n          shading: \"lambert\",\r\n          regions: [\r\n            {\r\n              name: \"黄浦区\",\r\n              itemStyle: {\r\n                color: \"#062031\",\r\n              },\r\n            },\r\n            {\r\n              name: \"徐汇区\",\r\n              itemStyle: {\r\n                color: \"#062031\",\r\n              },\r\n            },\r\n            {\r\n              name: \"长宁区\",\r\n              itemStyle: {\r\n                color: \"#062031\",\r\n              },\r\n            },\r\n            {\r\n              name: \"静安区\",\r\n              itemStyle: {\r\n                color: \"#062031\",\r\n              },\r\n            },\r\n            {\r\n              name: \"普陀区\",\r\n              itemStyle: {\r\n                color: \"#062031\",\r\n              },\r\n            },\r\n            {\r\n              name: \"虹口区\",\r\n              itemStyle: {\r\n                color: \"#062031\",\r\n              },\r\n            },\r\n            {\r\n              name: \"杨浦区\",\r\n              itemStyle: {\r\n                color: \"#062031\",\r\n              },\r\n            },\r\n            {\r\n              name: \"闵行区\",\r\n              itemStyle: {\r\n                color: \"#062031\",\r\n              },\r\n            },\r\n            {\r\n              name: \"宝山区\",\r\n              itemStyle: {\r\n                color: \"#062031\",\r\n              },\r\n            },\r\n            {\r\n              name: \"嘉定区\",\r\n              itemStyle: {\r\n                color: \"#062031\",\r\n              },\r\n            },\r\n            {\r\n              name: \"浦东新区\",\r\n              itemStyle: {\r\n                color: \"#062031\",\r\n              },\r\n            },\r\n            {\r\n              name: \"金山区\",\r\n              itemStyle: {\r\n                color: \"#062031\",\r\n              },\r\n            },\r\n            {\r\n              name: \"松江区\",\r\n              itemStyle: {\r\n                color: \"#062031\",\r\n              },\r\n            },\r\n            {\r\n              name: \"青浦区\",\r\n              itemStyle: {\r\n                color: \"#062031\",\r\n              },\r\n            },\r\n            {\r\n              name: \"奉贤区\",\r\n              itemStyle: {\r\n                color: \"#062031\",\r\n              },\r\n            },\r\n            {\r\n              name: \"崇明区\",\r\n              itemStyle: {\r\n                color: \"#062031\",\r\n              },\r\n            },\r\n          ],\r\n          light: {\r\n            main: {\r\n              intensity: 4,\r\n              shadow: true,\r\n              shadowQuality: \"low\",\r\n              alpha: 150,\r\n              beta: 100,\r\n            },\r\n            ambient: {\r\n              intensity: 0,\r\n            },\r\n          },\r\n          viewControl: {\r\n            distance: 170,\r\n            panMouseButton: \"left\",\r\n            rotateMouseButton: \"right\",\r\n            alpha:40,\r\n            center: [0,-30,0], // 视角中心点，旋转也会围绕这个中心点旋转，默认为[0,0,0]\r\n          },\r\n          groundPlane: {\r\n            show: false,\r\n            color: \"#999\",\r\n          },\r\n          postEffect: {\r\n            enable: true,\r\n            bloom: {\r\n              enable: false,\r\n            },\r\n            SSAO: {\r\n              radius: 1,\r\n              intensity: 1,\r\n              enable: true,\r\n            },\r\n            depthOfField: {\r\n              enable: false,\r\n              focalRange: 10,\r\n              blurRadius: 10,\r\n              fstop: 1,\r\n            },\r\n          },\r\n          temporalSuperSampling: {\r\n            enable: true,\r\n          },\r\n          itemStyle: {\r\n            borderWidth: 1.5,\r\n            borderColor: \"#43D0D6\",\r\n          },\r\n          regionHeight: 2,\r\n        },\r\n        series: [\r\n          {\r\n            type: \"bar3D\",\r\n            coordinateSystem: \"geo3D\",\r\n            shading: \"lambert\",\r\n            data: that.datax,\r\n            barSize: 0.8,\r\n            minHeight: 0.2,\r\n            // silent: true,\r\n            itemStyle: {\r\n              color: \"#33ffff\",\r\n              opacity: 0.7,\r\n            },\r\n          },\r\n        ],\r\n      });\r\n    },\r\n  },\r\n};\r\n",null]}