{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\factory\\location\\components\\amap.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\factory\\location\\components\\amap.vue","mtime":1609073358407},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getfactorylist } from \"@/api/model\";\r\nimport echarts from \"echarts\";\r\nimport shanghai from \"./mapdata/shanghai.json\";\r\necharts.registerMap(\"shanghai\", shanghai);\r\nexport default {\r\n  name: \"amap\",\r\n  components: {},\r\n  data() {\r\n    return {\r\n      bmap: {},\r\n      mapZoom: 10,\r\n      chart: echarts.ECharts,\r\n      data0: [], // 其他\r\n      data1: [], //焚烧厂\r\n      data2: [], //填埋场\r\n      data3: [], \r\n      data4: [],\r\n      geoCoordMap: {},\r\n      labelstatus: false,\r\n      centrl_geo: [121.477665, 31.226048],\r\n      zoom: 1.2,\r\n    };\r\n  },\r\n  methods: {\r\n    labelchange: function () {\r\n      this.initChart();\r\n    },\r\n    convertData(data) {\r\n      var res = [];\r\n      for (var i = 0; i < data.length; i++) {\r\n        var geoCoord = this.geoCoordMap[data[i].name];\r\n        if (geoCoord) {\r\n          res.push({\r\n            name: data[i].name,\r\n            value: geoCoord.concat(data[i].value),\r\n          });\r\n        }\r\n      }\r\n      return res;\r\n    },\r\n    getData() {\r\n      var that = this;\r\n      getfactorylist().then((res) => {\r\n        if (res.code === 20000) {\r\n          let fac_data = res.data;\r\n          for (let i = 0; i < fac_data.length; i++) {\r\n            let f_name = fac_data[i][\"name\"];\r\n            let f_value = fac_data[i][\"deal\"];\r\n            let f_longitude = fac_data[i][\"longitude\"];\r\n            let f_latitude = fac_data[i][\"latitude\"];\r\n            if (fac_data[i][\"typeId\"] === 0) {\r\n              that.data0.push({ name: f_name, value: f_value });\r\n            } else if (fac_data[i][\"typeId\"] === 1) {\r\n              that.data1.push({ name: f_name, value: f_value });\r\n            } else if (fac_data[i][\"typeId\"] === 2) {\r\n              that.data2.push({ name: f_name, value: f_value });\r\n            } else if (fac_data[i][\"typeId\"] === 3){\r\n              that.data3.push({ name: f_name, value: f_value });\r\n            } else if (fac_data[i][\"typeId\"] === 4){\r\n              that.data4.push({ name: f_name, value: f_value });\r\n            } \r\n            that.geoCoordMap[f_name] = [f_longitude, f_latitude];\r\n          }\r\n          that.initChart();\r\n        }\r\n      });\r\n    },\r\n    initChart() {\r\n      let img = new Image();\r\n      img.src = \"@/views/image/factory_bg.jpg\";\r\n      img.width = \"100%\";\r\n      img.height = \"100%\";\r\n      this.chart = echarts.init(this.$refs.map);\r\n      this.chart.setOption({\r\n        title: {\r\n          text: \"上海市无害化固废垃圾处理厂信息\",\r\n          subtext: \"截至2019年数据\",\r\n          textStyle: {\r\n            color: \"#fff\",\r\n          },\r\n          left: \"20\",\r\n          top: \"20\",\r\n        },\r\n        legend:{\r\n            data: ['其他(万吨)', '填埋厂', '焚烧场', '预处理+厌氧处理', '预处理+好氧处理'],\r\n            top: '100',\r\n            right: '20',\r\n            textStyle: {\r\n                color: '#fff'\r\n            },\r\n            orient: 'vertical'\r\n        },\r\n        tooltip: {\r\n          trigger: \"item\",\r\n          backgroundColor: \" rgba(0, 161, 255, 0.4)\",\r\n          borderColor: \"#00faff\",\r\n          showDelay: 0,\r\n          hideDelay: 0,\r\n          enterable: true,\r\n          transitionDuration: 0,\r\n          extraCssText: \"z-index:100\",\r\n          formatter: function (params, ticket, callback) {\r\n            //根据业务自己拓展要显示的内容\r\n            var res = \"\";\r\n            if (params.componentSubType === \"effectScatter\") {\r\n              var name = params.data.name;\r\n              var value = params.data.value[2];\r\n              res =\r\n                \"<span style='color:#fff;'>\" +\r\n                name +\r\n                \"</span><br/>数据：\" +\r\n                value;\r\n            } else {\r\n              var value = params.data.value;\r\n              res = \"<span style='color:#fff;'>p值\" + value + \"</span>\";\r\n            }\r\n            return res;\r\n          },\r\n        },\r\n        // backgroundColor: \"#013954\",\r\n        geo: {\r\n          map: \"shanghai\",\r\n          zoom: this.zoom,\r\n          center: this.centrl_geo,\r\n          label: {\r\n            emphasis: {\r\n              show: true,\r\n              textStyle: {\r\n                color: \"#fff\",\r\n              },\r\n            },\r\n          },\r\n          roam: true, //是否允许缩放\r\n          itemStyle: {\r\n            normal: {\r\n              color: \"#101f32\", //地图背景色\r\n              borderColor: \"#43d0d6\", //省市边界线\r\n              borderWidth: 1.1,\r\n            },\r\n            emphasis: {\r\n              color: \"#43d0d6\", //悬浮背景\r\n            },\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            name: \"其他(万吨)\",\r\n            type: \"effectScatter\",\r\n            coordinateSystem: \"geo\",\r\n            data: this.convertData(this.data0),\r\n            encode: {\r\n              value: 2,\r\n            },\r\n            symbolSize: function (val) {\r\n              return val[2] / 200;\r\n            },\r\n            rippleEffect: {\r\n              brushType: \"stroke\",\r\n              period: 2, //特效动画时长\r\n              scale: 3, //波纹的最大缩放比例\r\n            },\r\n            hoverAnimation: true,\r\n            label: {\r\n              formatter: \"{b}\",\r\n              position: \"right\",\r\n              show: this.labelstatus,\r\n            },\r\n            itemStyle: {\r\n              color: \"#f4e925\",\r\n              shadowBlur: 10,\r\n              shadowColor: \"#333\",\r\n            },\r\n            zlevel: 1,\r\n          },\r\n          {\r\n            name: \"填埋厂\",\r\n            type: \"effectScatter\",\r\n            coordinateSystem: \"geo\",\r\n            data: this.convertData(this.data1),\r\n            encode: {\r\n              value: 2,\r\n            },\r\n            symbolSize: function (val) {\r\n              return val[2] / 200;\r\n            },\r\n            rippleEffect: {\r\n              brushType: \"stroke\",\r\n              period: 2, //特效动画时长\r\n              scale: 3, //波纹的最大缩放比例\r\n            },\r\n            hoverAnimation: true,\r\n            label: {\r\n              formatter: \"{b}\",\r\n              position: \"top\",\r\n              show: this.labelstatus,\r\n            },\r\n            itemStyle: {\r\n              color: \"#ff33cc\",\r\n              shadowBlur: 10,\r\n              shadowColor: \"#333\",\r\n            },\r\n            zlevel: 1,\r\n          },\r\n          {\r\n            name: \"焚烧场\",\r\n            type: \"effectScatter\",\r\n            coordinateSystem: \"geo\",\r\n            data: this.convertData(this.data2),\r\n            encode: {\r\n              value: 2,\r\n            },\r\n            symbolSize: function (val) {\r\n              return val[2] / 200;\r\n            },\r\n            rippleEffect: {\r\n              brushType: \"stroke\",\r\n              period: 2, //特效动画时长\r\n              scale: 3, //波纹的最大缩放比例\r\n            },\r\n            hoverAnimation: true,\r\n            label: {\r\n              formatter: \"{b}\",\r\n              position: \"top\",\r\n              show: this.labelstatus,\r\n            },\r\n            itemStyle: {\r\n              color: \"#00ff00\",\r\n              shadowBlur: 10,\r\n              shadowColor: \"#333\",\r\n            },\r\n            zlevel: 1,\r\n          },\r\n          {\r\n            name: \"预处理+厌氧处理\",\r\n            type: \"effectScatter\",\r\n            coordinateSystem: \"geo\",\r\n            data: this.convertData(this.data3),\r\n            encode: {\r\n              value: 2,\r\n            },\r\n            symbolSize: function (val) {\r\n              return val[2] / 200;\r\n            },\r\n            rippleEffect: {\r\n              brushType: \"stroke\",\r\n              period: 2, //特效动画时长\r\n              scale: 3, //波纹的最大缩放比例\r\n            },\r\n            hoverAnimation: true,\r\n            label: {\r\n              formatter: \"{b}\",\r\n              position: \"top\",\r\n              show: this.labelstatus,\r\n            },\r\n            itemStyle: {\r\n              color: \"#C6E2FF\",\r\n              shadowBlur: 10,\r\n              shadowColor: \"#333\",\r\n            },\r\n            zlevel: 1,\r\n          },\r\n          {\r\n            name: \"预处理+好氧处理\",\r\n            type: \"effectScatter\",\r\n            coordinateSystem: \"geo\",\r\n            data: this.convertData(this.data4),\r\n            encode: {\r\n              value: 2,\r\n            },\r\n            symbolSize: function (val) {\r\n              return val[2] / 200;\r\n            },\r\n            rippleEffect: {\r\n              brushType: \"stroke\",\r\n              period: 2, //特效动画时长\r\n              scale: 3, //波纹的最大缩放比例\r\n            },\r\n            hoverAnimation: true,\r\n            label: {\r\n              formatter: \"{b}\",\r\n              position: \"top\",\r\n              show: this.labelstatus,\r\n            },\r\n            itemStyle: {\r\n              color: \"#ff0000\",\r\n              shadowBlur: 10,\r\n              shadowColor: \"#333\",\r\n            },\r\n            zlevel: 1,\r\n          },\r\n        ],\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getData();\r\n  },\r\n};\r\n",null]}