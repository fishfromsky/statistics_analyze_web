{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\production\\City\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\production\\City\\index.vue","mtime":1609073358437},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getcitygarbage, getcitygarbagedealdata, getcitygarbagecapacitydata, getcitygarbagevolumdata, getdangerousgarbage } from '@/api/model'\nimport compare from './components/compare'\nimport rate from './components/rate'\nimport collect from './components/collect'\nimport dealelement from './components/deal_element'\nimport dealcapacity from './components/deal_capacity'\nimport danger from './components/danger'\nimport { parse } from 'path-to-regexp'\nexport default {\n    name: \"index\",\n    components: {\n        compare,\n        rate,\n        collect,\n        dealelement,\n        dealcapacity,\n        danger\n    },\n    data(){\n        return {\n            garbageData: {\n                compare: {\n                    year: [],\n                    deal: [],\n                    handle: []\n                },\n                rate: {\n                    year: [],\n                    rate: []\n                },\n                collect: {\n                    year: [],\n                    collect_num: []\n                },\n                deal_element: {\n                    year: [],\n                    total: [],\n                    landfill: [],\n                    incineration: [],\n                    compost: [],\n                    else_num: []\n                },\n                deal_capacity: {\n                    year: [],\n                    total: [],\n                    landfill: [],\n                    incineration: [],\n                    compost: [],\n                    else_num: []\n                },\n                dangerous: {\n                    year: [],\n                    production: [],\n                    deal: [],\n                    use: [],\n                    store: []\n                }\n            }\n        }\n    },\n    methods: {\n        getData(){\n            let that = this\n            getcitygarbage().then(res=>{\n                if (res.code === 20000){\n                    let result = res.data\n                    result.sort(function(a, b){\n                        return parseInt(a.year) > parseInt(b.year) ? 1:-1\n                    })\n                    for (let i=0; i<result.length; i++){\n                        that.garbageData.compare.year.push(result[i]['year'])\n                        that.garbageData.compare.deal.push(parseFloat(result[i]['collect_transport_garbage']))\n                        that.garbageData.compare.handle.push(parseFloat(result[i]['volume_of_treated']))\n                        that.garbageData.rate.year.push(parseFloat(result[i]['year']))\n                        that.garbageData.rate.rate.push(parseFloat(result[i]['rate_of_treated']))\n                    }\n                }\n            })\n            getcitygarbagedealdata().then(res=>{\n                if (res.code === 20000){\n                    let result = res.data\n                    result.sort(function(a, b){\n                        return parseInt(a.year) > parseInt(b.year) ? 1:-1\n                    })\n                    for (let i=0; i<result.length; i++){\n                        that.garbageData.collect.year.push(parseFloat(result[i]['year']))\n                        that.garbageData.collect.collect_num.push(parseFloat(result[i]['collect_factory_num']))\n                    }\n                }\n            })\n            getcitygarbagecapacitydata().then(res=>{\n                if (res.code === 20000){\n                    let result = res.data\n                    result.sort(function(a, b){\n                        return parseInt(a.year) > parseInt(b.year) ? 1:-1\n                    })\n                    for (let i=0; i<result.length; i++){\n                        that.garbageData.deal_element.year.push(result[i]['year'])\n                        that.garbageData.deal_element.total.push(parseFloat(result[i]['deal_num_total']))\n                        that.garbageData.deal_element.landfill.push(parseFloat(result[i]['landfill']))\n                        that.garbageData.deal_element.incineration.push(parseFloat(result[i]['incineration']))\n                        that.garbageData.deal_element.compost.push(parseFloat(result[i]['compost']))\n                        that.garbageData.deal_element.else_num.push(parseFloat(result[i]['else_num']))\n                    }\n                }\n            })\n            getcitygarbagevolumdata().then(res=>{\n                if (res.code === 20000){\n                    let result = res.data\n                    result.sort(function(a, b){\n                        return parseInt(a.year) > parseInt(b.year) ? 1:-1\n                    })\n                    for (let i=0; i<result.length; i++){\n                        that.garbageData.deal_capacity.year.push(result[i]['year'])\n                        that.garbageData.deal_capacity.total.push(result[i]['deal_volume_total'])\n                        that.garbageData.deal_capacity.landfill.push(result[i]['landfill'])\n                        that.garbageData.deal_capacity.incineration.push(result[i]['incineration'])\n                        that.garbageData.deal_capacity.compost.push(result[i]['compost'])\n                        that.garbageData.deal_capacity.else_num.push(result[i]['else_num'])\n                    }\n                }\n            })\n            getdangerousgarbage().then(res=>{\n                if (res.code === 20000){\n                    let result = res.data\n                    result.sort(function(a, b){\n                        return parseInt(a.year) > parseInt(b.year) ? 1:-1\n                    })\n                    for (let i=0; i<result.length; i++){\n                        that.garbageData.dangerous.year.push(result[i]['year'])\n                        that.garbageData.dangerous.production.push(parseFloat(result[i]['production']))\n                        that.garbageData.dangerous.deal.push(parseFloat(result[i]['deal']))\n                        that.garbageData.dangerous.use.push(parseFloat(result[i]['use']))\n                        that.garbageData.dangerous.store.push(parseFloat(result[i]['store']))\n                    }\n                }\n            })\n        }\n    },\n    mounted(){\n        this.getData()\n    }\n}\n",null]}