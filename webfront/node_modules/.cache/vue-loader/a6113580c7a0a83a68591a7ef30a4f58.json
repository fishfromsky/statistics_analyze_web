{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web_2\\webfront\\src\\views\\project\\test\\index.vue?vue&type=template&id=18492fe5&scoped=true&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\src\\views\\project\\test\\index.vue","mtime":1640053529310},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"dashboard-container\" },\n    [\n      _c(\"div\", { staticClass: \"header\" }, [\n        _c(\"div\", { staticClass: \"header-title\" }, [\n          _vm._v(_vm._s(_vm.algorithm_name))\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"el-row\",\n        { staticStyle: { \"margin-top\": \"20px\" }, attrs: { gutter: 20 } },\n        [\n          _c(\"el-col\", { attrs: { xs: 24, sm: 24, lg: 16 } }, [\n            _c(\n              \"div\",\n              { staticClass: \"main-step-header\" },\n              [\n                _c(\n                  \"el-select\",\n                  {\n                    staticStyle: { \"margin-left\": \"20px\" },\n                    attrs: { placeholder: \"选择实验数据\" },\n                    model: {\n                      value: _vm.selectdata,\n                      callback: function($$v) {\n                        _vm.selectdata = $$v\n                      },\n                      expression: \"selectdata\"\n                    }\n                  },\n                  _vm._l(_vm.tableData, function(item) {\n                    return _c(\"el-option\", {\n                      key: item.index,\n                      attrs: { label: item.name, value: item.index }\n                    })\n                  }),\n                  1\n                ),\n                _vm._v(\" \"),\n                _vm.selectdata != null\n                  ? _c(\n                      \"el-button\",\n                      {\n                        staticStyle: { \"margin-left\": \"10px\" },\n                        attrs: { type: \"primary\" },\n                        on: { click: _vm.ColSelect }\n                      },\n                      [_vm._v(\"参数选择\")]\n                    )\n                  : _vm._e()\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"main-step-content\" },\n              [\n                _c(\n                  \"el-steps\",\n                  { attrs: { direction: \"vertical\", active: 1 } },\n                  _vm._l(_vm.modellist, function(item) {\n                    return _c(\n                      \"el-step\",\n                      { key: item.id, attrs: { title: item.name } },\n                      [\n                        _c(\"template\", { slot: \"description\" }, [\n                          _c(\"div\", { staticClass: \"detail-card\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"detail-card-container\" },\n                              [\n                                _c(\n                                  \"div\",\n                                  { staticClass: \"detail-img\" },\n                                  [\n                                    _c(\"el-image\", {\n                                      staticStyle: {\n                                        width: \"100%\",\n                                        height: \"100%\"\n                                      },\n                                      attrs: {\n                                        src: item.pic_url,\n                                        \"preview-src-list\": [item.pic_url]\n                                      }\n                                    })\n                                  ],\n                                  1\n                                ),\n                                _vm._v(\" \"),\n                                _c(\"div\", { staticClass: \"detail-title\" }, [\n                                  _c(\n                                    \"span\",\n                                    { staticClass: \"detail-title-1\" },\n                                    [_vm._v(_vm._s(item.name))]\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\"div\", { staticClass: \"divider\" }),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"span\",\n                                    { staticClass: \"detail-title-2\" },\n                                    [_vm._v(_vm._s(item.description))]\n                                  )\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"div\", { staticClass: \"vertical-divider\" }),\n                                _vm._v(\" \"),\n                                _c(\"div\", { staticClass: \"status-box\" }, [\n                                  _c(\"span\", { staticClass: \"status-title\" }, [\n                                    _vm._v(\"模型运行状态\")\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"status-label\" },\n                                    [\n                                      _c(\n                                        \"el-tag\",\n                                        { attrs: { type: \"primary\" } },\n                                        [_vm._v(_vm._s(item.status))]\n                                      )\n                                    ],\n                                    1\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"status-panel\" },\n                                    [\n                                      _c(\n                                        \"el-button\",\n                                        {\n                                          attrs: { type: \"text\", size: \"mini\" },\n                                          on: { click: _vm.Refresh }\n                                        },\n                                        [_vm._v(\"刷新状态\")]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"el-button\",\n                                        {\n                                          attrs: { type: \"text\", size: \"mini\" },\n                                          on: {\n                                            click: function($event) {\n                                              return _vm.seeResult(item.id)\n                                            }\n                                          }\n                                        },\n                                        [_vm._v(\"查看结果\")]\n                                      )\n                                    ],\n                                    1\n                                  )\n                                ])\n                              ]\n                            )\n                          ])\n                        ])\n                      ],\n                      2\n                    )\n                  }),\n                  1\n                )\n              ],\n              1\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"el-col\", { attrs: { xs: 24, sm: 24, lg: 8 } }, [\n            _c(\n              \"div\",\n              { staticClass: \"table-box\" },\n              [\n                _c(\"div\", { staticClass: \"box-title\" }, [\n                  _c(\"span\", { staticClass: \"box-title-span\" }, [\n                    _vm._v(\"实验数据上传\")\n                  ])\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"el-upload\",\n                  {\n                    staticClass: \"upload-demo\",\n                    attrs: {\n                      action: \"http://101.133.238.216:8000/api/uploadfile\",\n                      \"file-list\": _vm.fileList,\n                      \"on-error\": _vm.handleError,\n                      \"on-success\": _vm.handleSuccess\n                    }\n                  },\n                  [\n                    _c(\n                      \"el-button\",\n                      { attrs: { size: \"small\", type: \"primary\" } },\n                      [_vm._v(\"点击上传\")]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      {\n                        staticClass: \"el-upload__tip\",\n                        attrs: { slot: \"tip\" },\n                        slot: \"tip\"\n                      },\n                      [\n                        _vm._v(\n                          \"\\n            上传数据文件，仅限excel文件\\n          \"\n                        )\n                      ]\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"box-title\",\n                    staticStyle: { \"margin-top\": \"10px\" }\n                  },\n                  [\n                    _c(\"span\", { staticClass: \"box-title-span\" }, [\n                      _vm._v(\"数据上传历史\")\n                    ])\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"el-table\",\n                  {\n                    directives: [\n                      {\n                        name: \"loading\",\n                        rawName: \"v-loading\",\n                        value: _vm.table_loading,\n                        expression: \"table_loading\"\n                      }\n                    ],\n                    staticStyle: { \"margin-top\": \"20px\" },\n                    attrs: { data: _vm.tableData, border: \"\" }\n                  },\n                  [\n                    _c(\"el-table-column\", {\n                      attrs: { label: \"日期\", width: \"150\", prop: \"time\" }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"el-table-column\", {\n                      attrs: { label: \"文件名\", prop: \"name\" }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"el-table-column\", {\n                      attrs: { fixed: \"right\", label: \"操作\", width: \"100\" },\n                      scopedSlots: _vm._u([\n                        {\n                          key: \"default\",\n                          fn: function(scope) {\n                            return [\n                              _c(\n                                \"el-button\",\n                                {\n                                  attrs: { type: \"text\", size: \"small\" },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.handleDownload(scope.row)\n                                    }\n                                  }\n                                },\n                                [_vm._v(\"下载\")]\n                              ),\n                              _vm._v(\" \"),\n                              _c(\n                                \"el-button\",\n                                {\n                                  attrs: { type: \"text\", size: \"small\" },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.handleDelete(scope.index)\n                                    }\n                                  }\n                                },\n                                [_vm._v(\"删除\")]\n                              )\n                            ]\n                          }\n                        }\n                      ])\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ])\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            \"before-close\": _vm.handleClose,\n            visible: _vm.note_dialog,\n            title: \"提示信息\"\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.note_dialog = $event\n            }\n          }\n        },\n        [\n          _c(\"span\", [\n            _vm._v('请从编辑算法页面点击\"开始实验\"按钮进入本页面！')\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { attrs: { slot: \"footer\" }, slot: \"footer\" },\n            [\n              _c(\n                \"el-button\",\n                { attrs: { type: \"primary\" }, on: { click: _vm.handleClose } },\n                [_vm._v(\"确定\")]\n              )\n            ],\n            1\n          )\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: { title: \"参数选择\", visible: _vm.kmeans_dialog },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.kmeans_dialog = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"col_dialog\" },\n            [\n              _c(\"span\", [_vm._v(\"选择聚类指标\")]),\n              _vm._v(\" \"),\n              _c(\n                \"el-checkbox-group\",\n                {\n                  staticStyle: {\n                    \"margin-top\": \"20px\",\n                    \"margin-bottom\": \"20px\"\n                  },\n                  model: {\n                    value: _vm.checkList,\n                    callback: function($$v) {\n                      _vm.checkList = $$v\n                    },\n                    expression: \"checkList\"\n                  }\n                },\n                _vm._l(_vm.select_cols, function(item) {\n                  return _c(\"el-checkbox\", {\n                    key: item,\n                    attrs: { label: item }\n                  })\n                }),\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"template\",\n            { slot: \"footer\" },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function($event) {\n                      _vm.kmeans_dialog = false\n                    }\n                  }\n                },\n                [_vm._v(\"取消\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: { click: _vm.ColSelectKmeansConfirm }\n                },\n                [_vm._v(\"确定\")]\n              )\n            ],\n            1\n          )\n        ],\n        2\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"参数选择\",\n            visible: _vm.col_dialog,\n            \"custom-class\": \"col_dialog\"\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.col_dialog = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"col_dialog\" },\n            [\n              _c(\"span\", [_vm._v(\"选择需要进行关联分析的特征\")]),\n              _vm._v(\" \"),\n              _c(\n                \"el-checkbox-group\",\n                {\n                  staticStyle: {\n                    \"margin-top\": \"20px\",\n                    \"margin-bottom\": \"20px\"\n                  },\n                  model: {\n                    value: _vm.checkList,\n                    callback: function($$v) {\n                      _vm.checkList = $$v\n                    },\n                    expression: \"checkList\"\n                  }\n                },\n                _vm._l(_vm.select_cols, function(item) {\n                  return _c(\"el-checkbox\", {\n                    key: item,\n                    attrs: { label: item }\n                  })\n                }),\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"span\", [_vm._v(\"选择关联分析参考数据\")]),\n              _vm._v(\" \"),\n              _c(\n                \"el-radio-group\",\n                {\n                  staticStyle: {\n                    \"margin-top\": \"20px\",\n                    \"margin-bottom\": \"20px\"\n                  },\n                  model: {\n                    value: _vm.reference_col,\n                    callback: function($$v) {\n                      _vm.reference_col = $$v\n                    },\n                    expression: \"reference_col\"\n                  }\n                },\n                _vm._l(_vm.select_cols, function(item) {\n                  return _c(\"el-radio\", { key: item, attrs: { label: item } })\n                }),\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"span\", [_vm._v(\"选取相关性前多少个特征作为预测数据\")]),\n              _vm._v(\" \"),\n              _c(\"el-input\", {\n                staticStyle: { width: \"25%\", \"margin-top\": \"20px\" },\n                attrs: { type: \"number\", placeholder: \"请输入特征数\" },\n                model: {\n                  value: _vm.relative_max,\n                  callback: function($$v) {\n                    _vm.relative_max = $$v\n                  },\n                  expression: \"relative_max\"\n                }\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"template\",\n            { slot: \"footer\" },\n            [\n              _c(\n                \"el-button\",\n                {\n                  on: {\n                    click: function($event) {\n                      _vm.col_dialog = false\n                    }\n                  }\n                },\n                [_vm._v(\"取消\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\" },\n                  on: { click: _vm.ColSelectConfirm }\n                },\n                [_vm._v(\"确定\")]\n              )\n            ],\n            1\n          )\n        ],\n        2\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: { visible: _vm.result_dialog, title: \"实验结果历史记录\" },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.result_dialog = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-table\",\n            {\n              staticStyle: { \"margin-top\": \"20px\" },\n              attrs: { data: _vm.excelList, border: \"\" }\n            },\n            [\n              _c(\"el-table-column\", {\n                attrs: { label: \"运行结果文件\", prop: \"name\" }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { fixed: \"right\", label: \"操作\", width: \"100\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(ref) {\n                      var row = ref.row\n                      return [\n                        _c(\n                          \"a\",\n                          {\n                            staticStyle: {\n                              color: \"#1890FF\",\n                              \"font-size\": \"12px\"\n                            },\n                            attrs: { href: row.url }\n                          },\n                          [_vm._v(\"下载\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"el-button\",\n                          {\n                            attrs: { type: \"text\", size: \"small\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.DeleteRelationExcel(row.url)\n                              }\n                            }\n                          },\n                          [_vm._v(\"删除\")]\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}