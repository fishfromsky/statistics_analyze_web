{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web_2\\webfront\\src\\views\\repository\\relation\\data\\components\\table.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\src\\views\\repository\\relation\\data\\components\\table.vue","mtime":1609073358497},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getparameterrelation } from '@/api/model'\r\nexport default {\r\n  props: {\r\n    parentmsg: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  data(){\r\n    return{\r\n      project_id: null,\r\n      table_loading: false,\r\n      tablekey: 0,\r\n      tableData: [],\r\n      page_data: [],\r\n      total_size: 0,\r\n      currentPage: 1,\r\n      page_size: 10,\r\n      filename: 'relation_data',\r\n      autoWidth: true,\r\n      bookType: 'xlsx',\r\n    }\r\n  },\r\n  watch: {\r\n    parentmsg: function(a, b){\r\n      let that = this\r\n      this.project_id = a\r\n      let data = {}\r\n      this.tableData = []\r\n      this.page_data = []\r\n      this.getData()\r\n    }\r\n  },\r\n  methods: {\r\n    formatJson(filterVal, jsonData) {\r\n        return jsonData.map(v => filterVal.map(j => {\r\n            if (j === 'timestamp') {\r\n            return parseTime(v[j])\r\n            } else {\r\n            return v[j]\r\n            }\r\n        }))\r\n    },\r\n    download:function(){\r\n      import('@/vendor/Export2Excel').then(excel => {\r\n          const tHeader = ['project_id', 'year', 'garbage_clear', 'population', 'ratio_city_rural', 'household', 'people_per_capita', 'ratio_sex', 'age_0_14', 'age_15_64', 'age_65', 'disposable_income', 'consume_cost',\r\n          'public_cost', 'gdp', 'gdp_first_industry', 'gdp_second_industry', 'gdp_third_industry', 'gnp', 'education']\r\n          const filterVal = ['project_id', 'year', 'garbage_clear', 'population', 'ratio_city_rural', 'household', 'people_per_capita', 'ratio_sex', 'age_0_14', 'age_15_64', 'age_65', 'disposable_income', 'consume_cost',\r\n          'public_cost', 'gdp', 'gdp_first_industry', 'gdp_second_industry', 'gdp_third_industry', 'gnp', 'education']\r\n          const list = this.tableData\r\n          const data = this.formatJson(filterVal, list)\r\n          excel.export_json_to_excel({\r\n          header: tHeader,\r\n          data,\r\n          filename: this.filename,\r\n          autoWidth: this.autoWidth,\r\n          bookType: this.bookType\r\n          })\r\n      })\r\n    },\r\n    getData:function(){\r\n      let data = {}\r\n      let that = this\r\n      data['project_id'] = this.project_id\r\n      getparameterrelation(data).then(res => {\r\n        if (res.code === 20000){\r\n          that.table_loading = false\r\n          that.tableData = res.data\r\n          let size = that.page_size\r\n          let index = that.currentPage-1\r\n          for (let i=index*size; i<(index+1)*size; i++){\r\n              if (i==res.data.length){\r\n                  break\r\n              }\r\n              that.page_data.push(res.data[i])\r\n          }\r\n          that.total_size = res.data.length\r\n        }\r\n      })\r\n    },\r\n    handleSizeChange(val){\r\n      this.table_loading = true\r\n      this.page_size = val\r\n      this.currentPage = 1\r\n      this.page_data = []\r\n      this.getData()\r\n    },\r\n    handleCurrentChange(val){\r\n      this.currentPage = val\r\n      this.page_data = []\r\n      this.getData()\r\n    }\r\n  }\r\n}\r\n",null]}