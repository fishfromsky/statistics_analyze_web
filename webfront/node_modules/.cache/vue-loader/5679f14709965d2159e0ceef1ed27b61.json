{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\repository\\lstmModel\\result\\components\\result.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\repository\\lstmModel\\result\\components\\result.vue","mtime":1641987866622},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {\r\n  getlstmmodelresult,\r\n  getlstmresult,\r\n  getlstmreport,\r\n  deleterelationexcelresult,\r\n  LstmProjectStart,\r\n  getdatapathfromresult,\r\n  getexcelinfo,\r\n  makepredictionLSTM,\r\n  getlstmpredictionresult\r\n} from \"@/api/model\";\r\nimport chartresult from \"./components/resultchart\";\r\nexport default {\r\n  components: {\r\n    chartresult,\r\n  },\r\n  props: {\r\n    projectId: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      chart_dialog: false,\r\n      table_loading: false,\r\n      tablekey: 0,\r\n      tableData: [],\r\n      weightData: [],\r\n      page_data: [],\r\n      total_size: 0,\r\n      currentPage: 1,\r\n      page_size: 10,\r\n      project_id: \"\",\r\n      filename: \"lstm_result\",\r\n      autoWidth: true,\r\n      bookType: \"xlsx\",\r\n      sort_list: [],\r\n      graph_data: {\r\n        real: [],\r\n        pred: [],\r\n      },\r\n      report: {\r\n        choose_col: \"\",\r\n        choose_data: \"\",\r\n        r_square: \"\",\r\n        mse: \"\",\r\n        rmse: \"\",\r\n        mae: \"\",\r\n      },\r\n      predictDay: '',\r\n      predict_dialog: false,\r\n      predictFilePath: '',\r\n      result_dialog: false,\r\n      excelList: []\r\n    };\r\n  },\r\n  watch: {\r\n    projectId: function (a, _) {\r\n      this.project_id = a;\r\n      this.page_data = [];\r\n      this.tableData = [];\r\n      this.sort_list = [];\r\n      this.weightData = [];\r\n      this.initTable(a);\r\n    },\r\n  },\r\n  methods: {\r\n    getPrediction:function(){\r\n      this.result_dialog = true\r\n      this.getExcelResult()\r\n    },\r\n    getExcelResult() {\r\n      let that = this;\r\n      let username = this.getCookie(\"environment_name\");\r\n      let data = {};\r\n      this.excelList = []\r\n      data[\"user\"] = username;\r\n      data['project_id'] = this.project_id\r\n      getlstmpredictionresult(data).then((res) => {\r\n        if (res.code === 20000) {\r\n          let result = res.data;\r\n          for (let i = 0; i < result.length; i++) {\r\n            let dict = {};\r\n            dict[\"url\"] = result[i];\r\n            let name = result[i].split(\"/\");\r\n            dict[\"name\"] = name[name.length - 1];\r\n            that.excelList.push(dict);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    DeleteRelationExcel: function (index) {\r\n      let that = this\r\n      let data = {};\r\n      data[\"url\"] = index;\r\n      deleterelationexcelresult(data).then((res) => {\r\n        if (res.code === 20000) {\r\n          that.result_dialog = false\r\n          this.$message({\r\n            type: \"success\",\r\n            message: \"删除成功\",\r\n          });\r\n          this.getExcelResult()\r\n        }\r\n      });\r\n    },\r\n    DeleteExcel: function (val) {\r\n      let that = this;\r\n      let data = {};\r\n      data[\"url\"] = this.tableData[val].url;\r\n      deleterelationexcelresult(data).then((res) => {\r\n        if (res.code === 20000) {\r\n          let weight_data = {};\r\n          weight_data[\"url\"] = this.weightData[val];\r\n          deleterelationexcelresult(weight_data).then((res) => {\r\n            if (res.code === 20000) {\r\n              this.$message({\r\n                type: \"success\",\r\n                message: \"删除成功\",\r\n              });\r\n              that.table_loading = true;\r\n              that.tableData = [];\r\n              that.page_data = [];\r\n              that.weightData = [];\r\n              that.initTable(that.project_id);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    getCookie: function (name) {\r\n      var strcookie = document.cookie;\r\n      var arrcookie = strcookie.split(\"; \");\r\n      for (var i = 0; i < arrcookie.length; i++) {\r\n        var arr = arrcookie[i].split(\"=\");\r\n        if (arr[0] == name) {\r\n          return arr[1];\r\n        }\r\n      }\r\n      return \"\";\r\n    },\r\n    initTable: function (project_id) {\r\n      let that = this;\r\n      let data = {};\r\n      data[\"project_id\"] = project_id;\r\n      data[\"user\"] = this.getCookie(\"environment_name\");\r\n      getlstmmodelresult(data).then((res) => {\r\n        if (res.code === 20000) {\r\n          that.table_loading = false;\r\n          let result = res.data;\r\n          let result_data = [];\r\n          for (let i = 0; i < result.length; i++) {\r\n            let dict = {};\r\n            let pre_split = result[i].split(\".\");\r\n            let split_list = result[i].split(\"/\");\r\n            let path = \"\";\r\n            for (let j = 3; j < split_list.length; j++) {\r\n              if (j != split_list.length - 1) {\r\n                path = path + split_list[j] + \"/\";\r\n              } else {\r\n                path = path + split_list[j];\r\n              }\r\n            }\r\n            if (pre_split[pre_split.length - 1] === \"xlsx\") {\r\n              dict[\"url\"] = result[i];\r\n              dict[\"file_name\"] = split_list[split_list.length - 1];\r\n              dict[\"path\"] = path;\r\n              result_data.push(dict);\r\n            } else {\r\n              that.weightData.push(path);\r\n            }\r\n          }\r\n          that.tableData = result_data;\r\n          let size = that.page_size;\r\n          let index = that.currentPage - 1;\r\n          for (let i = index * size; i < (index + 1) * size; i++) {\r\n            if (i == result_data.length) {\r\n              break;\r\n            }\r\n            that.page_data.push(result_data[i]);\r\n          }\r\n          that.total_size = result_data.length;\r\n        }\r\n      });\r\n    },\r\n    makePrediction:function(val){\r\n      this.predict_dialog = true\r\n      this.predictFilePath = this.page_data[val].path\r\n    },\r\n    startPrediction:function(){\r\n      if (this.predictDay <= 0){\r\n        this.$message.error('输入年数必须大于0')\r\n      }\r\n      else if (this.predictDay > 10){\r\n        this.$message.error('输入年数必须小于10')\r\n      }\r\n      else{\r\n        let data = {}\r\n        data['path'] = this.predictFilePath\r\n        data[\"project_id\"] = this.project_id;\r\n        data[\"user\"] = this.getCookie(\"environment_name\");\r\n        data['days'] = this.predictDay\r\n        makepredictionLSTM(data).then(res=>{\r\n          if (res.code === 20000){\r\n            this.$message.success('正在预测中')\r\n            this.predict_dialog = false\r\n          }\r\n        })\r\n      }\r\n    },\r\n    Visualization(val) {\r\n      let that = this;\r\n      let data = {};\r\n      data[\"path\"] = this.page_data[val].path;\r\n      getlstmresult(data).then((res) => {\r\n        if (res.code === 20000) {\r\n          that.graph_data.pred = res.pred;\r\n          that.graph_data.real = res.fact;\r\n          that.report.choose_col = res.choose_col;\r\n          that.report.choose_data = res.choose_data;\r\n          that.report.mse = res.mse;\r\n          that.report.rmse = res.rmse;\r\n          that.report.r_square = res.r_square;\r\n          that.report.mae = res.mae;\r\n          that.chart_dialog = true;\r\n        }\r\n      });\r\n    },\r\n    Download: function (val) {\r\n      let file_path = this.page_data[val].url;\r\n      window.open(file_path);\r\n    },\r\n    handleSizeChange: function (val) {\r\n      this.table_loading = true;\r\n      this.page_size = val;\r\n      this.currentPage = 1;\r\n      this.page_data = [];\r\n      this.initTable(this.project_id);\r\n    },\r\n    handleCurrentChange: function (val) {\r\n      this.currentPage = val;\r\n      this.page_data = [];\r\n      this.initTable(this.project_id);\r\n    },\r\n  },\r\n  mounted() {},\r\n};\r\n",null]}