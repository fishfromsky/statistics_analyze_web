{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\repository\\kmeans\\result\\components\\result.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\repository\\kmeans\\result\\components\\result.vue","mtime":1641987866618},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {\r\n  getkmeansmodelresult,\r\n  getkmeansresult,\r\n  deleterelationexcelresult,\r\n} from \"@/api/model\";\r\nimport chartresult from \"./components/resultchart\";\r\nexport default {\r\n  components: {\r\n    chartresult,\r\n  },\r\n  props: {\r\n    projectId: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      chart_dialog: false,\r\n      table_loading: false,\r\n      tablekey: 0,\r\n      tableData: [],\r\n      weightData: [],\r\n      page_data: [],\r\n      total_size: 0,\r\n      currentPage: 1,\r\n      page_size: 10,\r\n      project_id: \"\",\r\n      filename: \"lstm_result\",\r\n      autoWidth: true,\r\n      bookType: \"xlsx\",\r\n      sort_list: [],\r\n      graph_data: {\r\n        xaxis: [],\r\n        yaxis: [],\r\n        label: [],\r\n        xlabel: '',\r\n        ylabel: '',\r\n        sse: null\r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n    projectId: function (a, _) {\r\n      this.project_id = a;\r\n      this.page_data = [];\r\n      this.tableData = [];\r\n      this.sort_list = [];\r\n      this.weightData = [];\r\n      this.initTable(a);\r\n    },\r\n  },\r\n  methods: {\r\n    DeleteExcel: function (val) {\r\n      let that = this;\r\n      let data = {};\r\n      data[\"url\"] = this.tableData[val].url;\r\n      deleterelationexcelresult(data).then((res) => {\r\n        if (res.code === 20000) {\r\n            this.$message({\r\n            type: \"success\",\r\n            message: \"删除成功\",\r\n            });\r\n            that.table_loading = true;\r\n            that.tableData = [];\r\n            that.page_data = [];\r\n            that.weightData = [];\r\n            that.initTable(that.project_id);\r\n        }\r\n      });\r\n    },\r\n    getCookie: function (name) {\r\n      var strcookie = document.cookie;\r\n      var arrcookie = strcookie.split(\"; \");\r\n      for (var i = 0; i < arrcookie.length; i++) {\r\n        var arr = arrcookie[i].split(\"=\");\r\n        if (arr[0] == name) {\r\n          return arr[1];\r\n        }\r\n      }\r\n      return \"\";\r\n    },\r\n    initTable: function (project_id) {\r\n      let that = this;\r\n      let data = {};\r\n      data[\"project_id\"] = project_id;\r\n      data[\"user\"] = this.getCookie(\"environment_name\");\r\n      getkmeansmodelresult(data).then((res) => {\r\n        if (res.code === 20000) {\r\n          that.table_loading = false;\r\n          let result = res.data;\r\n          let result_data = [];\r\n          for (let i = 0; i < result.length; i++) {\r\n            let dict = {};\r\n            let split_list = result[i].split(\"/\");\r\n            let path = \"\";\r\n            for (let j = 3; j < split_list.length; j++) {\r\n              if (j != split_list.length - 1) {\r\n                path = path + split_list[j] + \"/\";\r\n              } else {\r\n                path = path + split_list[j];\r\n              }\r\n            }\r\n            dict[\"url\"] = result[i];\r\n            dict[\"file_name\"] = split_list[split_list.length - 1];\r\n            dict[\"path\"] = path;\r\n            result_data.push(dict);\r\n          }\r\n          that.tableData = result_data;\r\n          let size = that.page_size;\r\n          let index = that.currentPage - 1;\r\n          for (let i = index * size; i < (index + 1) * size; i++) {\r\n            if (i == result_data.length) {\r\n              break;\r\n            }\r\n            that.page_data.push(result_data[i]);\r\n          }\r\n          that.total_size = result_data.length;\r\n        }\r\n      });\r\n    },\r\n    Visualization(val) {\r\n      let data = {};\r\n      data[\"path\"] = this.page_data[val].path;\r\n      getkmeansresult(data).then((res) => {\r\n        if (res.code === 20000) {\r\n          this.graph_data.xaxis = res.xaxis;\r\n          this.graph_data.yaxis = res.yaxis;\r\n          this.graph_data.label = res.label;\r\n          this.graph_data.xlabel = res.xlabel\r\n          this.graph_data.ylabel = res.ylabel\r\n          this.graph_data.sse = res.SSE\r\n          this.chart_dialog = true;\r\n        }\r\n      });\r\n    },\r\n    Download: function (val) {\r\n      let file_path = this.page_data[val].url;\r\n      window.open(file_path);\r\n    },\r\n    handleSizeChange: function (val) {\r\n      this.table_loading = true;\r\n      this.page_size = val;\r\n      this.currentPage = 1;\r\n      this.page_data = [];\r\n      this.initTable(this.project_id);\r\n    },\r\n    handleCurrentChange: function (val) {\r\n      this.currentPage = val;\r\n      this.page_data = [];\r\n      this.initTable(this.project_id);\r\n    },\r\n  },\r\n  mounted() {},\r\n};\r\n",null]}