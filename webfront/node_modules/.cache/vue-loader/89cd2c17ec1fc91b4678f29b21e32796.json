{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\economy\\City\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\economy\\City\\index.vue","mtime":1609073358399},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import { mapGetters } from 'vuex'\n    import { getcityeconomydata } from '@/api/model'\n    import GdpChart from './components/GDP'\n    import capita_Gdp from './components/capita_GDP'\n    import local_Gdp from './components/local_GDP'\n    import Industry from './components/Industry'\nimport { parse } from 'path-to-regexp'\n    export default {\n        name: \"index\",\n        components:{\n            GdpChart,\n            capita_Gdp,\n            local_Gdp,\n            Industry\n        },\n        data(){\n            return {\n              BasicInfo: {\n                GDPData: {\n                    total: [],\n                    rate: [],\n                    year: []\n                },\n                CapitaGDP: {\n                  capita_gdp: [],\n                  year: []\n                },\n                Rate: {\n                  economy_rate: [],\n                  year: []\n                },\n                Industry: {\n                  year: [],\n                  first: [],\n                  second: [],\n                  third: []\n                }\n              }\n            }\n        },\n        computed: {\n            ...mapGetters([\n                'name'\n            ])\n        },\n        mounted(){\n          let that = this;\n          getcityeconomydata().then(res=>{\n            if (res.code === 20000){\n              let result = res.data\n              result.sort(function(a, b){\n                return parseInt(a.year) > parseInt(b.year) ? 1:-1\n              })\n              for (let i=0; i<result.length; i++){\n                that.BasicInfo.GDPData.total.push(parseFloat(result[i]['gdp']))\n                that.BasicInfo.GDPData.rate.push(result[i]['gdp_growth_rate'])\n                that.BasicInfo.GDPData.year.push(result[i]['year'])\n                that.BasicInfo.CapitaGDP.capita_gdp.push(parseFloat(result[i]['gdp_per_capita']))\n                that.BasicInfo.CapitaGDP.year.push(result[i]['year'])\n                that.BasicInfo.Rate.economy_rate.push(parseFloat(result[i]['gdp_growth_rate']))\n                that.BasicInfo.Rate.year.push(result[i]['year'])\n                that.BasicInfo.Industry.year.push(result[i]['year'])\n                let sum = result[i]['gdp_first_industry']+result[i]['gdp_second_industry']+result[i]['gdp_third_industry']\n                that.BasicInfo.Industry.first.push((result[i]['gdp_first_industry']/sum).toFixed(2))\n                that.BasicInfo.Industry.second.push((result[i]['gdp_second_industry']/sum).toFixed(2))\n                that.BasicInfo.Industry.third.push((result[i]['gdp_third_industry']/sum).toFixed(2))\n              }\n            }\n          })\n        }\n    }\n",null]}