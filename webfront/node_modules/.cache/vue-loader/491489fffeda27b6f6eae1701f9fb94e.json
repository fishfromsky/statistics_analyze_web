{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\drypaper\\City\\components\\production.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\drypaper\\City\\components\\production.vue","mtime":1642405597967},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport echarts from 'echarts'\n\nrequire('echarts/theme/westeros') // echarts theme\nimport resize from './mixins/resize'\n\nexport default {\n  name: \"production\",\n  mixins: [resize],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '500px'\n    },\n    autoResize: {\n      type: Boolean,\n      default: true\n    },\n    chartData: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      chart: null\n    }\n  },\n  watch: {\n    chartData: {\n      deep: true,\n      handler(val) {\n        this.setOptions(val)\n      }\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.initChart()\n    })\n  },\n  beforeDestroy() {\n    if (!this.chart) {\n      return\n    }\n    this.chart.dispose();\n    this.chart = null\n  },\n  methods: {\n    initChart() {\n      this.chart = echarts.init(this.$el, 'westeros');\n      this.setOptions(this.chartData)\n    },\n    setOptions(val) {\n      let population_data = val.data\n      let year = val.year\n      this.chart.setOption({\n        title: {\n          text: '上海市干垃圾产量',\n          textStyle: {\n            fontSize: 30\n          }\n        },\n        grid: {\n          top: '20%'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            crossStyle: {\n              color: '#999'\n            },\n            label: {\n              fontSize: 20\n            }\n          }\n        },\n        xAxis: [\n          {\n            type: 'category',\n            data: year,\n            axisPointer: {\n              type: 'shadow'\n            },\n            axisLabel: {\n              fontSize: 25\n            },\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            name: '万吨',\n            axisLabel: {\n              formatter: '{value}',\n              fontSize: 25\n            },\n            nameTextStyle:{\n              fontSize: 30\n            }\n          },\n        ],\n        series: [\n          {\n            name: '垃圾产量',\n            type: 'bar',\n            data: population_data\n          },\n        ]\n      })\n    }\n  }\n}\n",null]}