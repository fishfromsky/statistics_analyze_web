{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\repository\\p_median\\components\\BarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\repository\\p_median\\components\\BarChart.vue","mtime":1609073358487},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport echarts from 'echarts'\nrequire('echarts/theme/westeros') // echarts theme\nimport resize from './mixins/resize'\n\nconst animationDuration = 6000;\n\nexport default {\n    name: \"BarChart\",\n    mixins: [resize],\n    props:{\n      className: {\n        type: String,\n        default: 'chart'\n      },\n      width: {\n        type: String,\n        default: '100%'\n      },\n      height: {\n        type: String,\n        default: '350px'\n      },\n      autoResize: {\n        type: Boolean,\n        default: true\n      },\n      chartData: {\n        type: Object,\n        required: true\n      }\n    },\n     data(){\n      return {\n        chart: null\n      }\n    },\n    watch:{\n      chartData:{\n        deep: true,\n        handler(val) {\n          this.setOptions(val)\n        }\n      }\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initChart()\n      })\n    },\n    beforeDestroy() {\n      if (!this.chart) {\n        return\n      }\n      this.chart.dispose();\n      this.chart = null\n    },\n    methods:{\n      initChart(){\n         this.chart = echarts.init(this.$el, 'westeros');\n         this.setOptions(this.chartData)\n      },\n      setOptions({model1,model2,p} = {}){\n        this.chart.setOption({\n          tooltip:{\n            trigger: 'axis',\n            axisPointer: {            // 坐标轴指示器，坐标轴触发有效\n                type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n            }\n          },\n           grid: {\n            top: 10,\n            left: '2%',\n            right: '2%',\n            bottom: '3%',\n            containLabel: true\n          },\n          xAxis: [{\n            name: '集散厂数量',\n            type: 'category',\n            data: p,\n            axisTick: {\n              alignWithLabel: true\n            },\n            axisLabel:{\n              interval: 0,\n              rotate: 0\n            }\n          }],\n          yAxis: [{\n            name: '万元',\n            type: 'value',\n            axisTick: {\n              show: false\n            }\n          }],\n          series:[\n            {\n              name: '交通成本',\n              type: 'bar',\n              stack: 'vistors',\n              barWidth: '60%',\n              data: model1,\n              color: '#59C4E6',\n              animationDuration\n            }, {\n              name: '规模成本',\n              type: 'bar',\n              stack: 'vistors',\n              barWidth: '60%',\n              data: model2,\n              color: '#EDAFDA',\n              animationDuration\n            }\n          ]\n        })\n      }\n    }\n}\n",null]}