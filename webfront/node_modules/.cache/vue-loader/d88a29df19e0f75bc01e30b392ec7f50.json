{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\element\\components\\smallgarbage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\element\\components\\smallgarbage.vue","mtime":1609073358402},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\r\nimport echarts from 'echarts'\r\nrequire('echarts/theme/walden') // echarts theme\r\nimport resize from './mixins/resize'\r\n\r\nexport default {\r\n  mixins: [resize],\r\n  props: {\r\n    className: {\r\n      type: String,\r\n      default: 'chart'\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: '100%'\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '350px'\r\n    },\r\n    autoResize: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    chartData: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      chart: null\r\n    }\r\n  },\r\n  watch: {\r\n    chartData: {\r\n      deep: true,\r\n      handler(val) {\r\n        this.setOptions(val)\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.initChart()\r\n    })\r\n  },\r\n  beforeDestroy() {\r\n    if (!this.chart) {\r\n      return\r\n    }\r\n    this.chart.dispose()\r\n    this.chart = null\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chart = echarts.init(this.$el, 'walden')\r\n      this.setOptions(this.chartData)\r\n    },\r\n    setOptions(val) {\r\n        this.chart.setOption({\r\n            tooltip: {\r\n                trigger: 'axis',\r\n                axisPointer: {\r\n                    type: 'cross',\r\n                    label: {\r\n                        backgroundColor: '#6a7985'\r\n                    }\r\n                }\r\n            },\r\n            toolbox: {\r\n                feature: {\r\n                    saveAsImage: {}\r\n                }\r\n            },\r\n            grid: {\r\n                left: '3%',\r\n                right: '4%',\r\n                bottom: '3%',\r\n                containLabel: true\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                boundaryGap: false,\r\n                data: val.year,\r\n                splitLine:{\r\n                    show: false\r\n                }\r\n            },\r\n            yAxis: {\r\n                type: 'value',\r\n                splitLine:{\r\n                    show: false\r\n                }\r\n            },\r\n            series: [\r\n                {\r\n                    name: '湿垃圾',\r\n                    type: 'line',\r\n                    data: val.wet\r\n                },\r\n                {\r\n                    name: '干垃圾',\r\n                    type: 'line',\r\n                    data: val.dry\r\n                },\r\n                {\r\n                    name: '可回收物',\r\n                    type: 'line',\r\n                    data: val.recycle\r\n                },\r\n                {\r\n                    name: '有害垃圾',\r\n                    type: 'line',\r\n                    data: val.harm\r\n                },\r\n                {\r\n                    name: '清运总量',\r\n                    type: 'line',\r\n                    data: val.total\r\n                },\r\n            ]\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}