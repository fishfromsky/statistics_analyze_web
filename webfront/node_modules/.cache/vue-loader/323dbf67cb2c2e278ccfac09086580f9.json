{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web_2\\webfront\\src\\views\\dinner\\Country\\components\\map.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\src\\views\\dinner\\Country\\components\\map.vue","mtime":1641223038780},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web_2\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n\nimport echarts from 'echarts'\nimport resize from './mixins/resize'\nimport data from './mapdata/shi.json'\nimport shanghai from \"./mapdata/shanghai.json\"\necharts.registerMap(\"shanghai\", shanghai);\n\nvar lngExtent = [30.6503888542, 31.8030482032]\nvar latExtent = [120.893603906, 122.351009468]\n// 方格图的行边界和列边界\nvar cellCount = [134, 155]\nvar cellSizeCoord = [\n  (lngExtent[1] - lngExtent[0]) / cellCount[0],\n  (latExtent[1] - latExtent[0]) / cellCount[1]\n]\n\nexport default {\n  name: 'GDP',\n  data() {\n    return {\n      chart: echarts.ECharts\n    }\n  },\n  watch: {\n\n  },\n  mounted() {\n    this.initChart()\n  },\n  beforeDestroy() {\n    if (!this.chart) {\n      return\n    }\n    this.chart.dispose()\n    this.chart = null\n  },\n\n  methods: {\n    getCoord(params, api, lngIndex, latIndex) {\n      var coords = params.context.coords || (params.context.coords = [])\n      var key = lngIndex + '-' + latIndex\n      // bmap returns point in integer, which makes cell width unstable.\n      // So we have to use right bottom point.\n      return coords[key] || (coords[key] = api.coord([\n        +(latExtent[0] + lngIndex * cellSizeCoord[0]).toFixed(6),\n        +(lngExtent[0] + latIndex * cellSizeCoord[1]).toFixed(6)\n      ]))\n    },\n\n\n    renderItem(params, api) {\n      var lngIndex = api.value(0)\n      var latIndex = api.value(1)\n      var pointLeftTop = this.getCoord(params, api, lngIndex, latIndex)\n      var pointRightBottom = this.getCoord(params, api, lngIndex + 1, latIndex + 1)\n\n      return {\n        type: 'rect',\n        shape: {\n          x: pointLeftTop[0],\n          y: pointLeftTop[1],\n          width: pointRightBottom[0] - pointLeftTop[0],\n          height: pointRightBottom[1] - pointLeftTop[1]\n        },\n        style: api.style({\n          stroke: 'rgba(0,0,0,0)'\n        }),\n        styleEmphasis: api.styleEmphasis()\n      }\n    },\n    initChart() {\n      this.chart = echarts.init(this.$refs.map);\n      this.chart.setOption({\n        tooltip: {},\n        visualMap: {\n          type: 'continuous',\n          min: 0,\n          max: 8000,\n          top: 10,\n          left: 10,\n          range: [1, 8000],\n          inRange: {\n            color: ['#AFEEEE', '#FAE900', '#F6AE00', '#C41A1A'],\n            colorAlpha: [0.8, 0.9]\n          },\n          outOfRange: {\n            color: ['rgba(0,0,0,0)'],\n            opacity: 0\n          }\n        },\n        series: [\n          {\n            type: 'custom',\n            coordinateSystem: 'geo',\n            renderItem: this.renderItem,\n            animation: false,\n            emphasis: {\n              itemStyle: {\n                color: 'yellow'\n              }\n            },\n            encode: {\n              tooltip: 2\n            },\n            data: data\n          }\n        ],\n        geo: {\n          map: \"shanghai\",\n          zoom: 1.2,\n          center: [121.477665, 31.226048],\n          label: {\n            emphasis: {\n              show: true,\n              textStyle: {\n                color: \"#fff\",\n              },\n            },\n          },\n          roam: true, //是否允许缩放\n          itemStyle: {\n            normal: {\n              color: \"#101f32\", //地图背景色\n              borderColor: \"#43d0d6\", //省市边界线\n              borderWidth: 1.1,\n            },\n            emphasis: {\n              color: \"#43d0d6\", //悬浮背景\n            },\n          },\n        },\n      })\n    },\n  }\n}\n",null]}