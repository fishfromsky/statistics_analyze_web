{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js!D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\utils\\scroll-to.js","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\utils\\scroll-to.js","mtime":1609073358354},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.scrollTo = scrollTo;\n\nMath.easeInOutQuad = function (t, b, c, d) {\n  t /= d / 2;\n\n  if (t < 1) {\n    return c / 2 * t * t + b;\n  }\n\n  t--;\n  return -c / 2 * (t * (t - 2) - 1) + b;\n}; // requestAnimationFrame for Smart Animating http://goo.gl/sx5sts\n\n\nvar requestAnimFrame = function () {\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {\n    window.setTimeout(callback, 1000 / 60);\n  };\n}();\n/**\r\n * Because it's so fucking difficult to detect the scrolling element, just move them all\r\n * @param {number} amount\r\n */\n\n\nfunction move(amount) {\n  document.documentElement.scrollTop = amount;\n  document.body.parentNode.scrollTop = amount;\n  document.body.scrollTop = amount;\n}\n\nfunction position() {\n  return document.documentElement.scrollTop || document.body.parentNode.scrollTop || document.body.scrollTop;\n}\n/**\r\n * @param {number} to\r\n * @param {number} duration\r\n * @param {Function} callback\r\n */\n\n\nfunction scrollTo(to, duration, callback) {\n  var start = position();\n  var change = to - start;\n  var increment = 20;\n  var currentTime = 0;\n  duration = typeof duration === 'undefined' ? 500 : duration;\n\n  var animateScroll = function animateScroll() {\n    // increment the time\n    currentTime += increment; // find the value with the quadratic in-out easing function\n\n    var val = Math.easeInOutQuad(currentTime, start, change, duration); // move the document.body\n\n    move(val); // do the animation unless its over\n\n    if (currentTime < duration) {\n      requestAnimFrame(animateScroll);\n    } else {\n      if (callback && typeof callback === 'function') {\n        // the animation is done so lets callback\n        callback();\n      }\n    }\n  };\n\n  animateScroll();\n}",null]}