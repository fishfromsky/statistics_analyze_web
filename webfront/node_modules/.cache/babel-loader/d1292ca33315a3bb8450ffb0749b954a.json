{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js!D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\router\\index.js","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\router\\index.js","mtime":1642410469137},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/projectsAll/statistics_analyze_web/webfront/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetRouter = resetRouter;\nexports.default = exports.asyncRoutes = exports.constantRoutes = void 0;\n\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"D:/projectsAll/statistics_analyze_web/webfront/node_modules/@babel/runtime/helpers/interopRequireWildcard\"));\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _vueRouter = _interopRequireDefault(require(\"vue-router\"));\n\nvar _layout = _interopRequireDefault(require(\"@/layout\"));\n\n_vue.default.use(_vueRouter.default);\n/* Layout */\n\n\n/**\n * Note: sub-menu only appear when route children.length >= 1\n * Detail see: https://panjiachen.github.io/vue-element-admin-site/guide/essentials/router-and-nav.html\n *\n * hidden: true                   if set true, item will not show in the sidebar(default is false)\n * alwaysShow: true               if set true, will always show the root menu\n *                                if not set alwaysShow, when item has more than one children route,\n *                                it will becomes nested mode, otherwise not show the root menu\n * redirect: noRedirect           if set noRedirect will no redirect in the breadcrumb\n * name:'router-name'             the name is used by <keep-alive> (must set!!!)\n * meta : {\n    roles: ['admin','editor']    control the page roles (you can set multiple roles)\n    title: 'title'               the name show in sidebar and breadcrumb (recommend set)\n    icon: 'svg-name'             the icon show in the sidebar\n    noCache: true                if set true, the page will no be cached(default is false)\n    affix: true                  if set true, the tag will affix in the tags-view\n    breadcrumb: false            if set false, the item will hidden in breadcrumb(default is true)\n    activeMenu: '/example/list'  if set path, the sidebar will highlight the path you set\n  }\n */\n\n/**\n * constantRoutes\n * a base page that does not have permission requirements\n * all roles can be accessed\n */\nvar constantRoutes = [{\n  path: '/login',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/login/index'));\n    });\n  },\n  hidden: true\n}, {\n  path: '/404',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/404'));\n    });\n  },\n  hidden: true\n}, {\n  path: '/',\n  component: _layout.default,\n  redirect: '/dashboard',\n  children: [{\n    path: 'dashboard',\n    name: 'Dashboard',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/dashboard/index'));\n      });\n    },\n    meta: {\n      title: '我的主页',\n      icon: 'dashboard'\n    }\n  }]\n}, {\n  path: '/info',\n  component: _layout.default,\n  redirect: '/info/economy/city',\n  name: 'Info',\n  meta: {\n    title: '经济人口',\n    icon: 'money'\n  },\n  children: [{\n    path: 'economy',\n    name: 'Economy',\n    redirect: '/info/economy/city',\n    meta: {\n      title: '经济信息'\n    },\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/economy/index'));\n      });\n    },\n    children: [{\n      path: 'city',\n      name: 'City',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/economy/City/index'));\n        });\n      },\n      meta: {\n        title: '全市经济'\n      }\n    }, {\n      path: 'district',\n      name: 'District',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/economy/District/index'));\n        });\n      },\n      meta: {\n        title: '各区经济'\n      }\n    }, {\n      path: 'country',\n      name: 'country',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/economy/Country/index'));\n        });\n      },\n      meta: {\n        title: '乡镇经济'\n      }\n    }]\n  }, {\n    path: 'population',\n    name: 'Population',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/population/index'));\n      });\n    },\n    meta: {\n      title: '人口信息'\n    },\n    children: [{\n      path: 'city',\n      name: 'CityPopulation',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/population/City/index'));\n        });\n      },\n      meta: {\n        title: '全市人口'\n      }\n    }, {\n      path: 'district',\n      name: 'DistrictPopulation',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/population/District/index'));\n        });\n      },\n      meta: {\n        title: '各区人口'\n      }\n    }, {\n      path: 'country',\n      name: 'CountryPopulation',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/population/Country/index'));\n        });\n      },\n      meta: {\n        title: '乡镇人口'\n      }\n    }]\n  }]\n}, {\n  path: '/garbage',\n  component: _layout.default,\n  name: 'Garbage',\n  meta: {\n    title: '固废信息',\n    icon: 'bug'\n  },\n  redirect: '/garbage/production/city',\n  children: [{\n    path: 'production',\n    name: 'Production',\n    redirect: '/garbage/production/city',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/production/index'));\n      });\n    },\n    meta: {\n      title: '固废产量'\n    },\n    children: [{\n      path: 'city',\n      name: 'CityProduction',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/production/City/index'));\n        });\n      },\n      meta: {\n        title: '全市固废信息'\n      }\n    }, {\n      path: 'district',\n      name: 'DistrictProduction',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/production/District/index'));\n        });\n      },\n      meta: {\n        title: '各区固废信息'\n      }\n    }, {\n      path: 'country',\n      name: 'CountryProduction',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/production/Country/index'));\n        });\n      },\n      meta: {\n        title: '乡镇固废信息'\n      }\n    }]\n  }, {\n    path: 'element',\n    name: 'element',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/element/index'));\n      });\n    },\n    meta: {\n      title: '固废成分'\n    }\n  }, {\n    path: 'dinner',\n    name: 'dinner',\n    meta: {\n      title: '厨余垃圾'\n    },\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/dinner/index'));\n      });\n    },\n    children: [{\n      path: 'city',\n      name: 'dinner_city',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/dinner/City/index'));\n        });\n      },\n      meta: {\n        title: '全市情况'\n      }\n    }, {\n      path: 'district',\n      name: 'dinner_district',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/dinner/District/index'));\n        });\n      },\n      meta: {\n        title: '各区情况'\n      }\n    }, {\n      path: 'country',\n      name: 'dinner_country',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/dinner/Country/index'));\n        });\n      },\n      meta: {\n        title: '乡镇情况'\n      }\n    }]\n  }, {\n    path: 'plastic',\n    name: 'plastic',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/plastic/index'));\n      });\n    },\n    meta: {\n      title: '废塑料'\n    },\n    children: [{\n      path: 'city',\n      name: 'plastic_city',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/plastic/City/index'));\n        });\n      },\n      meta: {\n        title: '全市情况'\n      }\n    }, {\n      path: 'district',\n      name: 'plastic_district',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/plastic/District/index'));\n        });\n      },\n      meta: {\n        title: '各区情况'\n      }\n    }, {\n      path: 'country',\n      name: 'plastic_country',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/plastic/Country/index'));\n        });\n      },\n      meta: {\n        title: '城镇情况'\n      }\n    }]\n  }, {\n    path: 'paper',\n    name: 'paper',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/paper/index'));\n      });\n    },\n    meta: {\n      title: '废纸品'\n    },\n    children: [{\n      path: 'city',\n      name: 'paper_city',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/paper/City/index'));\n        });\n      },\n      meta: {\n        title: '全市情况'\n      }\n    }, {\n      path: 'district',\n      name: 'paper_district',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/paper/District/index'));\n        });\n      },\n      meta: {\n        title: '各区情况'\n      }\n    }, {\n      path: 'country',\n      name: 'paper_country',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/paper/Country/index'));\n        });\n      },\n      meta: {\n        title: '城镇情况'\n      }\n    }]\n  }, {\n    path: 'drypaper',\n    name: 'drypaper',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/drypaper/index'));\n      });\n    },\n    meta: {\n      title: '干垃圾'\n    },\n    children: [{\n      path: 'city',\n      name: 'drypaper_city',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/drypaper/City/index'));\n        });\n      },\n      meta: {\n        title: '全市情况'\n      }\n    }, {\n      path: 'district',\n      name: 'drypaper_district',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/drypaper/District/index'));\n        });\n      },\n      meta: {\n        title: '各区情况'\n      }\n    }, {\n      path: 'country',\n      name: 'drypaper_country',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/drypaper/Country/index'));\n        });\n      },\n      meta: {\n        title: '城镇情况'\n      }\n    }]\n  }, {\n    path: 'medal',\n    name: 'medal',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/medal/index'));\n      });\n    },\n    meta: {\n      title: '金属'\n    },\n    children: [{\n      path: 'city',\n      name: 'medal_city',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/medal/City/index'));\n        });\n      },\n      meta: {\n        title: '全市情况'\n      }\n    }, {\n      path: 'district',\n      name: 'medal_district',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/medal/District/index'));\n        });\n      },\n      meta: {\n        title: '各区情况'\n      }\n    }, {\n      path: 'country',\n      name: 'medal_country',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/medal/Country/index'));\n        });\n      },\n      meta: {\n        title: '城镇情况'\n      }\n    }]\n  }]\n}, {\n  path: '/factory',\n  component: _layout.default,\n  name: 'Factory',\n  meta: {\n    title: '地图可视化',\n    icon: 'map'\n  },\n  redirect: '/factory/location',\n  children: [{\n    path: 'location',\n    name: 'Factory_location',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/factory/location/index'));\n      });\n    },\n    meta: {\n      title: '无害化处理厂'\n    }\n  }, {\n    path: 'transfer',\n    name: 'Garbage_Transfer',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/factory/collect/index'));\n      });\n    },\n    meta: {\n      title: '垃圾中转站'\n    }\n  }, {\n    path: 'collect',\n    name: 'Garbage_Collect',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/factory/garbage_collect/index'));\n      });\n    },\n    meta: {\n      title: '垃圾收集点'\n    }\n  }]\n}, {\n  path: '/repository',\n  component: _layout.default,\n  redirect: '/repository/p_median',\n  meta: {\n    title: '模型仓库',\n    icon: 'algo'\n  },\n  children: [{\n    path: 'p_median',\n    name: 'p_median',\n    redirect: '/repository/p_median',\n    meta: {\n      title: '集散厂优化'\n    },\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/repository/index'));\n      });\n    },\n    children: [{\n      path: 'manage',\n      name: 'manage',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/repository/p_median/manageProject/index.vue'));\n        });\n      },\n      meta: {\n        title: '管理项目'\n      }\n    }, {\n      path: 'importData',\n      name: 'importData',\n      meta: {\n        title: '数据导入'\n      },\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/repository/index'));\n        });\n      },\n      children: [{\n        path: 'pmedianbs-table',\n        component: function component() {\n          return Promise.resolve().then(function () {\n            return (0, _interopRequireWildcard2.default)(require('@/views/repository/p_median/importData1/pmedianbs-table'));\n          });\n        },\n        name: 'Pmedian基本参数',\n        meta: {\n          title: 'Pmedian基本参数'\n        }\n      }, {\n        path: 'pmediancstmtr-table',\n        component: function component() {\n          return Promise.resolve().then(function () {\n            return (0, _interopRequireWildcard2.default)(require('@/views/repository/p_median/importData1/pmediancstmtr-table'));\n          });\n        },\n        name: 'cost矩阵表',\n        meta: {\n          title: 'cost矩阵表'\n        }\n      }, {\n        path: 'pmedianreccen-table',\n        component: function component() {\n          return Promise.resolve().then(function () {\n            return (0, _interopRequireWildcard2.default)(require('@/views/repository/p_median/importData1/pmedianreccen-table'));\n          });\n        },\n        name: '集散场',\n        meta: {\n          title: '集散场'\n        }\n      }, {\n        path: 'pmediants-table',\n        component: function component() {\n          return Promise.resolve().then(function () {\n            return (0, _interopRequireWildcard2.default)(require('@/views/repository/p_median/importData1/pmediants-table'));\n          });\n        },\n        name: '中转站',\n        meta: {\n          title: '中转站'\n        }\n      }]\n    }, {\n      path: 'query',\n      name: 'query',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require(\"@/views/repository/index\"));\n        });\n      },\n      meta: {\n        title: '结果查询'\n      },\n      children: [{\n        path: 'utputallocation-table',\n        component: function component() {\n          return Promise.resolve().then(function () {\n            return (0, _interopRequireWildcard2.default)(require('@/views/repository/p_median/result/utputallocation-table'));\n          });\n        },\n        name: 'Pmedian分配表',\n        meta: {\n          title: 'Pmedian分配表'\n        }\n      }, {\n        path: 'dianoutputbuilds-table',\n        component: function component() {\n          return Promise.resolve().then(function () {\n            return (0, _interopRequireWildcard2.default)(require('@/views/repository/p_median/result/dianoutputbuilds-table'));\n          });\n        },\n        name: 'Pmedian建设规模',\n        meta: {\n          title: 'Pmedian建设规模'\n        }\n      }, {\n        path: 'pmedianoutputcomx-table',\n        component: function component() {\n          return Promise.resolve().then(function () {\n            return (0, _interopRequireWildcard2.default)(require('@/views/repository/p_median/result/pmedianoutputcomx-table'));\n          });\n        },\n        name: 'Pmedian输出Cost',\n        meta: {\n          title: 'Pmedian_Cost'\n        }\n      }]\n    }, {\n      path: 'test',\n      name: 'echartstest',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/repository/p_median/test/test.vue'));\n        });\n      },\n      meta: {\n        title: '结果展示'\n      }\n    }]\n  }, {\n    path: 'greenHouse',\n    name: 'greenHouse',\n    redirect: '/repository/greenHouse',\n    meta: {\n      title: '温室气体排放预测模型'\n    },\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/repository/index'));\n      });\n    },\n    children: [{\n      path: 'manage',\n      name: 'manage',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/repository/greenHouse/manageProject/index.vue'));\n        });\n      },\n      meta: {\n        title: '管理项目'\n      }\n    }, {\n      path: 'test',\n      name: 'echartstest',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/repository/index'));\n        });\n      },\n      meta: {\n        title: '结果展示'\n      },\n      children: [{\n        path: 'Nation',\n        name: 'Nation',\n        component: function component() {\n          return Promise.resolve().then(function () {\n            return (0, _interopRequireWildcard2.default)(require('@/views/repository/greenHouse/Show/Nation'));\n          });\n        },\n        meta: {\n          title: '全国情况'\n        }\n      }, {\n        path: 'SH',\n        name: 'SH',\n        component: function component() {\n          return Promise.resolve().then(function () {\n            return (0, _interopRequireWildcard2.default)(require('@/views/repository/greenHouse/Show/index'));\n          });\n        },\n        meta: {\n          title: '上海市情况'\n        }\n      }, {\n        path: 'NationMap',\n        name: 'NationMap',\n        component: function component() {\n          return Promise.resolve().then(function () {\n            return (0, _interopRequireWildcard2.default)(require('@/views/repository/greenHouse/Show/NationMap'));\n          });\n        },\n        meta: {\n          title: '各省份情况'\n        }\n      }]\n    }]\n  }, {\n    path: 'lstmModel',\n    name: 'lstmModel',\n    redirect: '/repository/lstmModel',\n    meta: {\n      title: 'LSTM模型'\n    },\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/repository/index'));\n      });\n    },\n    children: [{\n      path: 'manage',\n      name: 'manage',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/repository/lstmModel/manageProject/index'));\n        });\n      },\n      meta: {\n        title: '管理项目'\n      }\n    }, {\n      path: 'result',\n      name: 'result',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/repository/lstmModel/result/index'));\n        });\n      },\n      meta: {\n        title: '结果查询'\n      }\n    }]\n  }, {\n    path: 'linearregression',\n    name: 'linearregression',\n    redirect: '/repository/linearregression',\n    meta: {\n      title: '多元线性回归'\n    },\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/repository/index'));\n      });\n    },\n    children: [{\n      path: 'manage',\n      name: 'linearregressionmanage',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/repository/linearregression/manage/index'));\n        });\n      },\n      meta: {\n        title: '管理项目'\n      }\n    }, {\n      path: 'result',\n      name: 'linearregressionresult',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/repository/linearregression/result/index'));\n        });\n      },\n      meta: {\n        title: '结果查询'\n      }\n    }]\n  }, {\n    path: 'linearregression',\n    name: 'linearregression',\n    redirect: '/repository/linearregression',\n    meta: {\n      title: '多元线性回归'\n    },\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/repository/index'));\n      });\n    },\n    children: [{\n      path: 'manage',\n      name: 'linearregressionmanage',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/repository/linearregression/manage/index'));\n        });\n      },\n      meta: {\n        title: '管理项目'\n      }\n    }, {\n      path: 'result',\n      name: 'linearregressionresult',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/repository/linearregression/result/index'));\n        });\n      },\n      meta: {\n        title: '结果查询'\n      }\n    }]\n  }, {\n    path: 'multiregression',\n    name: 'multiregression',\n    redirect: '/repository/regression',\n    meta: {\n      title: '多元非线性回归'\n    },\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/repository/index'));\n      });\n    },\n    children: [{\n      path: 'manage',\n      name: 'manage',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/repository/regression/programe/index'));\n        });\n      },\n      meta: {\n        title: '管理项目'\n      }\n    }, {\n      path: 'experiment',\n      name: 'experiment',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/repository/regression/result/index'));\n        });\n      },\n      meta: {\n        title: '结果查询'\n      }\n    }]\n  }, {\n    path: 'kmeans',\n    name: 'kmeans',\n    redirect: '/repository/kmeans',\n    meta: {\n      title: 'KMEANS聚类'\n    },\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/repository/index'));\n      });\n    },\n    children: [{\n      path: 'manage',\n      name: 'manage',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/repository/kmeans/manage/index'));\n        });\n      },\n      meta: {\n        title: '项目管理'\n      }\n    }, {\n      path: 'result',\n      name: 'result',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/repository/kmeans/result/index'));\n        });\n      },\n      meta: {\n        title: '结果查询'\n      }\n    }]\n  }, {\n    path: 'relation',\n    name: 'relation',\n    redirect: '/repository/relation',\n    meta: {\n      title: '关联分析'\n    },\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/repository/index'));\n      });\n    },\n    children: [{\n      path: 'manage',\n      name: 'manage',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/repository/relation/manage/index'));\n        });\n      },\n      meta: {\n        title: '项目管理'\n      }\n    }, {\n      path: 'result',\n      name: 'result',\n      component: function component() {\n        return Promise.resolve().then(function () {\n          return (0, _interopRequireWildcard2.default)(require('@/views/repository/index'));\n        });\n      },\n      meta: {\n        title: '结果查询'\n      },\n      children: [{\n        path: 'hotmatrix',\n        name: 'hotmatrix',\n        component: function component() {\n          return Promise.resolve().then(function () {\n            return (0, _interopRequireWildcard2.default)(require('@/views/repository/relation/result/hotmatrix/index'));\n          });\n        },\n        meta: {\n          title: '相关系数'\n        }\n      }, {\n        path: 'rf',\n        name: 'rf',\n        component: function component() {\n          return Promise.resolve().then(function () {\n            return (0, _interopRequireWildcard2.default)(require('@/views/repository/relation/result/RF/index'));\n          });\n        },\n        meta: {\n          title: '随机森林'\n        }\n      }, {\n        path: 'grey',\n        name: 'grey',\n        component: function component() {\n          return Promise.resolve().then(function () {\n            return (0, _interopRequireWildcard2.default)(require('@/views/repository/relation/result/greyrelation/index'));\n          });\n        },\n        meta: {\n          title: '灰色关联度'\n        }\n      }, {\n        path: 'pearson',\n        name: 'pearson',\n        component: function component() {\n          return Promise.resolve().then(function () {\n            return (0, _interopRequireWildcard2.default)(require('@/views/repository/relation/result/pearson/index'));\n          });\n        },\n        meta: {\n          title: '皮尔逊系数'\n        }\n      }]\n    }]\n  }]\n}, {\n  path: '/crawldata',\n  component: _layout.default,\n  children: [{\n    path: 'garbagedata',\n    name: 'garbagedata',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/crawldata/garbagedata/index'));\n      });\n    },\n    meta: {\n      title: '数据获取',\n      icon: 'crawldata'\n    }\n  }]\n}];\n/**\n * asyncRoutes\n * the routes that need to be dynamically loaded based on user roles\n */\n\nexports.constantRoutes = constantRoutes;\nvar asyncRoutes = [{\n  path: '/project',\n  component: _layout.default,\n  redirect: '/project/board',\n  meta: {\n    title: '算法实验',\n    icon: 'component'\n  },\n  children: [{\n    path: 'board',\n    name: 'board',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/project/board/index'));\n      });\n    },\n    meta: {\n      title: '算法列表',\n      roles: ['超级管理员', '教师']\n    }\n  }, {\n    path: 'select',\n    name: 'select',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/project/edit/index'));\n      });\n    },\n    meta: {\n      title: '编辑算法',\n      roles: ['超级管理员', '教师']\n    }\n  }, {\n    path: 'test',\n    name: 'test',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/project/test/index'));\n      });\n    },\n    meta: {\n      title: '算法实验',\n      roles: ['超级管理员', '教师']\n    }\n  }, {\n    path: 'add',\n    name: 'add',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/project/add/index'));\n      });\n    },\n    meta: {\n      title: '管理模型',\n      roles: ['超级管理员']\n    }\n  }]\n}, {\n  path: '/example',\n  component: _layout.default,\n  redirect: '/example/table',\n  name: 'Example',\n  meta: {\n    title: '管理数据',\n    icon: 'example'\n  },\n  children: [{\n    path: 'table',\n    name: 'Table',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/table/index'));\n      });\n    },\n    meta: {\n      title: '数据导入',\n      roles: ['超级管理员', '教师']\n    }\n  }, {\n    path: 'tree',\n    name: 'Tree',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/tree/index'));\n      });\n    },\n    meta: {\n      title: '数据管理',\n      roles: ['超级管理员']\n    }\n  }]\n}, {\n  path: '/member',\n  component: _layout.default,\n  redirect: '/member/superuser',\n  name: 'Example',\n  meta: {\n    title: '成员管理',\n    icon: 'user'\n  },\n  children: [{\n    path: 'superuser',\n    name: 'Superuser',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/member/components/Superuser'));\n      });\n    },\n    meta: {\n      title: '超级管理员'\n    }\n  }, {\n    path: 'teacher',\n    name: 'Teacher',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/member/components/Teacher'));\n      });\n    },\n    meta: {\n      title: '教师管理'\n    }\n  }, {\n    path: 'student',\n    name: 'Student',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/member/components/Student'));\n      });\n    },\n    meta: {\n      title: '学生管理'\n    }\n  }]\n}, // 404 page must be placed at the end !!!\n{\n  path: '*',\n  redirect: '/404',\n  hidden: true\n}];\nexports.asyncRoutes = asyncRoutes;\n\nvar createRouter = function createRouter() {\n  return new _vueRouter.default({\n    // mode: 'history', // require service support\n    scrollBehavior: function scrollBehavior() {\n      return {\n        y: 0\n      };\n    },\n    routes: constantRoutes\n  });\n};\n\nvar router = createRouter(); // Detail see: https://github.com/vuejs/vue-router/issues/1234#issuecomment-357941465\n\nfunction resetRouter() {\n  var newRouter = createRouter();\n  router.matcher = newRouter.matcher; // reset router\n}\n\nvar _default = router;\nexports.default = _default;",null]}