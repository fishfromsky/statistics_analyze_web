{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js!D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\repository\\lstmModel\\result\\components\\result.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\repository\\lstmModel\\result\\components\\result.vue","mtime":1641987866622},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/projectsAll/statistics_analyze_web/webfront/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nvar _model = require(\"@/api/model\");\n\nvar _resultchart = _interopRequireDefault(require(\"./components/resultchart\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  components: {\n    chartresult: _resultchart.default\n  },\n  props: {\n    projectId: {\n      type: String,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      chart_dialog: false,\n      table_loading: false,\n      tablekey: 0,\n      tableData: [],\n      weightData: [],\n      page_data: [],\n      total_size: 0,\n      currentPage: 1,\n      page_size: 10,\n      project_id: \"\",\n      filename: \"lstm_result\",\n      autoWidth: true,\n      bookType: \"xlsx\",\n      sort_list: [],\n      graph_data: {\n        real: [],\n        pred: []\n      },\n      report: {\n        choose_col: \"\",\n        choose_data: \"\",\n        r_square: \"\",\n        mse: \"\",\n        rmse: \"\",\n        mae: \"\"\n      },\n      predictDay: '',\n      predict_dialog: false,\n      predictFilePath: '',\n      result_dialog: false,\n      excelList: []\n    };\n  },\n  watch: {\n    projectId: function projectId(a, _) {\n      this.project_id = a;\n      this.page_data = [];\n      this.tableData = [];\n      this.sort_list = [];\n      this.weightData = [];\n      this.initTable(a);\n    }\n  },\n  methods: {\n    getPrediction: function getPrediction() {\n      this.result_dialog = true;\n      this.getExcelResult();\n    },\n    getExcelResult: function getExcelResult() {\n      var that = this;\n      var username = this.getCookie(\"environment_name\");\n      var data = {};\n      this.excelList = [];\n      data[\"user\"] = username;\n      data['project_id'] = this.project_id;\n      (0, _model.getlstmpredictionresult)(data).then(function (res) {\n        if (res.code === 20000) {\n          var result = res.data;\n\n          for (var i = 0; i < result.length; i++) {\n            var dict = {};\n            dict[\"url\"] = result[i];\n            var name = result[i].split(\"/\");\n            dict[\"name\"] = name[name.length - 1];\n            that.excelList.push(dict);\n          }\n        }\n      });\n    },\n    DeleteRelationExcel: function DeleteRelationExcel(index) {\n      var _this = this;\n\n      var that = this;\n      var data = {};\n      data[\"url\"] = index;\n      (0, _model.deleterelationexcelresult)(data).then(function (res) {\n        if (res.code === 20000) {\n          that.result_dialog = false;\n\n          _this.$message({\n            type: \"success\",\n            message: \"删除成功\"\n          });\n\n          _this.getExcelResult();\n        }\n      });\n    },\n    DeleteExcel: function DeleteExcel(val) {\n      var _this2 = this;\n\n      var that = this;\n      var data = {};\n      data[\"url\"] = this.tableData[val].url;\n      (0, _model.deleterelationexcelresult)(data).then(function (res) {\n        if (res.code === 20000) {\n          var weight_data = {};\n          weight_data[\"url\"] = _this2.weightData[val];\n          (0, _model.deleterelationexcelresult)(weight_data).then(function (res) {\n            if (res.code === 20000) {\n              _this2.$message({\n                type: \"success\",\n                message: \"删除成功\"\n              });\n\n              that.table_loading = true;\n              that.tableData = [];\n              that.page_data = [];\n              that.weightData = [];\n              that.initTable(that.project_id);\n            }\n          });\n        }\n      });\n    },\n    getCookie: function getCookie(name) {\n      var strcookie = document.cookie;\n      var arrcookie = strcookie.split(\"; \");\n\n      for (var i = 0; i < arrcookie.length; i++) {\n        var arr = arrcookie[i].split(\"=\");\n\n        if (arr[0] == name) {\n          return arr[1];\n        }\n      }\n\n      return \"\";\n    },\n    initTable: function initTable(project_id) {\n      var that = this;\n      var data = {};\n      data[\"project_id\"] = project_id;\n      data[\"user\"] = this.getCookie(\"environment_name\");\n      (0, _model.getlstmmodelresult)(data).then(function (res) {\n        if (res.code === 20000) {\n          that.table_loading = false;\n          var result = res.data;\n          var result_data = [];\n\n          for (var i = 0; i < result.length; i++) {\n            var dict = {};\n            var pre_split = result[i].split(\".\");\n            var split_list = result[i].split(\"/\");\n            var path = \"\";\n\n            for (var j = 3; j < split_list.length; j++) {\n              if (j != split_list.length - 1) {\n                path = path + split_list[j] + \"/\";\n              } else {\n                path = path + split_list[j];\n              }\n            }\n\n            if (pre_split[pre_split.length - 1] === \"xlsx\") {\n              dict[\"url\"] = result[i];\n              dict[\"file_name\"] = split_list[split_list.length - 1];\n              dict[\"path\"] = path;\n              result_data.push(dict);\n            } else {\n              that.weightData.push(path);\n            }\n          }\n\n          that.tableData = result_data;\n          var size = that.page_size;\n          var index = that.currentPage - 1;\n\n          for (var _i = index * size; _i < (index + 1) * size; _i++) {\n            if (_i == result_data.length) {\n              break;\n            }\n\n            that.page_data.push(result_data[_i]);\n          }\n\n          that.total_size = result_data.length;\n        }\n      });\n    },\n    makePrediction: function makePrediction(val) {\n      this.predict_dialog = true;\n      this.predictFilePath = this.page_data[val].path;\n    },\n    startPrediction: function startPrediction() {\n      var _this3 = this;\n\n      if (this.predictDay <= 0) {\n        this.$message.error('输入年数必须大于0');\n      } else if (this.predictDay > 10) {\n        this.$message.error('输入年数必须小于10');\n      } else {\n        var data = {};\n        data['path'] = this.predictFilePath;\n        data[\"project_id\"] = this.project_id;\n        data[\"user\"] = this.getCookie(\"environment_name\");\n        data['days'] = this.predictDay;\n        (0, _model.makepredictionLSTM)(data).then(function (res) {\n          if (res.code === 20000) {\n            _this3.$message.success('正在预测中');\n\n            _this3.predict_dialog = false;\n          }\n        });\n      }\n    },\n    Visualization: function Visualization(val) {\n      var that = this;\n      var data = {};\n      data[\"path\"] = this.page_data[val].path;\n      (0, _model.getlstmresult)(data).then(function (res) {\n        if (res.code === 20000) {\n          that.graph_data.pred = res.pred;\n          that.graph_data.real = res.fact;\n          that.report.choose_col = res.choose_col;\n          that.report.choose_data = res.choose_data;\n          that.report.mse = res.mse;\n          that.report.rmse = res.rmse;\n          that.report.r_square = res.r_square;\n          that.report.mae = res.mae;\n          that.chart_dialog = true;\n        }\n      });\n    },\n    Download: function Download(val) {\n      var file_path = this.page_data[val].url;\n      window.open(file_path);\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.table_loading = true;\n      this.page_size = val;\n      this.currentPage = 1;\n      this.page_data = [];\n      this.initTable(this.project_id);\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n      this.page_data = [];\n      this.initTable(this.project_id);\n    }\n  },\n  mounted: function mounted() {}\n};\nexports.default = _default;",null]}