{"remainingRequest":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js!D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\repository\\kmeans\\result\\components\\components\\resultchart.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\src\\views\\repository\\kmeans\\result\\components\\components\\resultchart.vue","mtime":1641987866617},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projectsAll\\statistics_analyze_web\\webfront\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/projectsAll/statistics_analyze_web/webfront/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _echarts = _interopRequireDefault(require(\"echarts\"));\n\nvar _resize = _interopRequireDefault(require(\"./mixins/resize\"));\n\nvar _utils = require(\"@/utils\");\n\n//\n//\n//\n//\nrequire('echarts/theme/infographic'); // echarts theme\n\n\nvar _default = {\n  mixins: [_resize.default],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '250px'\n    },\n    autoResize: {\n      type: Boolean,\n      default: true\n    },\n    chartData: {\n      type: Object,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      chart: null,\n      xlabel: '',\n      ylabel: ''\n    };\n  },\n  computed: {\n    option: function option() {\n      var that = this;\n      return {\n        title: {\n          text: 'bi-kmeans聚类分析结果',\n          left: 'center'\n        },\n        xAxis: {\n          type: 'value',\n          name: that.xlabel\n        },\n        yAxis: {\n          type: 'value',\n          name: that.ylabel\n        },\n        tooltip: {\n          axisPointer: {\n            type: 'cross'\n          }\n        },\n        series: []\n      };\n    }\n  },\n  watch: {\n    chartData: {\n      deep: true,\n      handler: function handler(val) {\n        this.setOptions(val);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.initChart();\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (!this.chart) {\n      return;\n    }\n\n    this.chart.dispose();\n    this.chart = null;\n  },\n  methods: {\n    getdataoption: function getdataoption(result, k) {\n      var series = [];\n\n      for (var i = 0; i < k; i++) {\n        this.option.series.push({\n          name: 'scatter' + i,\n          type: 'scatter',\n          animation: false,\n          data: result[i],\n          markPoint: {\n            symbolSize: 29,\n            label: {\n              show: false\n            },\n            itemStyle: {\n              opacity: 0.7\n            }\n          }\n        });\n      }\n    },\n    initChart: function initChart() {\n      this.chart = _echarts.default.init(this.$el, 'infographic');\n      this.setOptions(this.chartData);\n    },\n    setOptions: function setOptions(val) {\n      this.xlabel = val.xlabel;\n      this.ylabel = val.ylabel;\n      var label_num = this.judgesortnum(val.label);\n      var dataset = [];\n\n      for (var i = 0; i < label_num; i++) {\n        dataset.push([]);\n      }\n\n      for (var _i = 0; _i < val.label.length; _i++) {\n        var index = val.label[_i];\n        dataset[index].push([val.xaxis[_i], val.yaxis[_i]]);\n      }\n\n      this.getdataoption(dataset, label_num);\n      this.chart.setOption(this.option);\n    },\n    judgesortnum: function judgesortnum(list) {\n      var tmp_sort = [];\n\n      for (var i = 0; i < list.length; i++) {\n        if (!this.isInArray(tmp_sort, list[i])) {\n          tmp_sort.push(list[i]);\n        }\n      }\n\n      return tmp_sort.length;\n    },\n    isInArray: function isInArray(arr, value) {\n      for (var i = 0; i < arr.length; i++) {\n        if (value === arr[i]) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }\n};\nexports.default = _default;",null]}